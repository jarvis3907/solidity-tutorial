{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "x",
						"type": "uint256"
					}
				],
				"name": "add",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "dynamicSizeArray",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "fixedSizeArray",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "length",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pop",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "idx",
						"type": "uint256"
					}
				],
				"name": "remove",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "A contract demonstrating the use of both fixed-size and dynamic-size arrays in Solidity.",
			"kind": "dev",
			"methods": {
				"add(uint256)": {
					"details": "Adds a new element to the end of the dynamic array.",
					"params": {
						"x": "The value to be added to the dynamicSizeArray."
					}
				},
				"length()": {
					"details": "Returns the current length of the dynamic array.",
					"returns": {
						"_0": "The length of the dynamicSizeArray."
					}
				},
				"pop()": {
					"details": "Removes the last element from the dynamic array. The length of the array is reduced by one."
				},
				"remove(uint256)": {
					"details": "Removes an element from the fixed-size array by setting it to the default value (0). Note: This does not change the array's length, as it's fixed.",
					"params": {
						"idx": "The index of the element to be removed from the fixedSizeArray."
					}
				}
			},
			"title": "Arrays",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"basics/Arrays.sol": "Arrays"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"basics/Arrays.sol": {
			"keccak256": "0xf1a7d00227414cef7be7342564b6ff1e0554a0648cedcdae235c0b21857cc025",
			"license": "MIT",
			"urls": [
				"bzz-raw://8d90fce6d4756532a0580e1bb8a4bd48e9ae5868b9a445f44b4b25d53235c77f",
				"dweb:/ipfs/QmTiNWwDeYozoBiSPA9HpR8FZQGAmEszfHrSykkUXVakoh"
			]
		}
	},
	"version": 1
}