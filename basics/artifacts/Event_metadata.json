{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "bidder",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Bid",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "highestBidder",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "StopAuction",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "bid",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "stopAuction",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Events are used to log bids and the stopping of the auction. The contract owner is the only one who can stop the auction.",
			"events": {
				"Bid(address,uint256)": {
					"details": "Emitted when a new bid is placed.",
					"params": {
						"bidder": "The address of the bidder.",
						"value": "The value of the bid."
					}
				},
				"StopAuction(address,uint256)": {
					"details": "Emitted when the auction is stopped.",
					"params": {
						"highestBidder": "The address of the highest bidder.",
						"value": "The value of the highest bid."
					}
				}
			},
			"kind": "dev",
			"methods": {
				"bid()": {
					"details": "Bids must be higher than the current highest bid, and the owner cannot place a bid.Emits a {Bid} event on a successful bid."
				},
				"constructor": {
					"details": "The owner will have the ability to stop the auction."
				},
				"stopAuction()": {
					"details": "Only the owner can call this function. The contract is destroyed after the auction is stopped.Emits a {StopAuction} event before destroying the contract."
				},
				"withdraw()": {
					"details": "The owner cannot withdraw as they are not allowed to place bids.Withdrawals are processed using the `call` method to prevent reentrancy attacks."
				}
			},
			"title": "Event Contract",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"bid()": {
					"notice": "Allows users to place a bid in the auction."
				},
				"constructor": {
					"notice": "Initializes the contract and sets the contract deployer as the owner."
				},
				"stopAuction()": {
					"notice": "Allows the owner to stop the auction and finalize the highest bid."
				},
				"withdraw()": {
					"notice": "Allows users to withdraw their previous bids."
				}
			},
			"notice": "This contract demonstrates a simple auction system with bidding and withdrawal functionalities using events.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Event.sol": "Event"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Event.sol": {
			"keccak256": "0x8a44b50ef8b4f47b26897c4ff537b3ca7aa91c49c457f3c7dc9dcbb92aed0cbf",
			"license": "MIT",
			"urls": [
				"bzz-raw://f7e4e84325eb9997e3d162652c5cc1775503f60884286b633e3d13e5997c8caa",
				"dweb:/ipfs/QmVTaGa8P2BHaCr8WXotyPA1iy8EEViNVr5rbW81E1Brwg"
			]
		}
	},
	"version": 1
}