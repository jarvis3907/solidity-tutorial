{
	"id": "fe115d97f593dd9ae8641471129f3e89",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"advanced/AbstractContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @title AbstractContract\n * @dev This abstract contract provides the structure for a sign-up bonus system with deposit and withdrawal functionalities.\n */\nabstract contract AbstractContract {\n    mapping(address => uint256) balances;\n    mapping(address => bool) deposited;\n\n    /**\n     * @dev Internal function to get the bonus amount. Must be implemented by derived contracts.\n     * @return The bonus amount as a uint256.\n     */\n    function getBonusAmount() internal pure virtual returns (uint256);\n\n    /**\n     * @dev Internal function to get the bonus requirement. Must be implemented by derived contracts.\n     * @return The bonus requirement as a uint256.\n     */\n    function getBonusRequirement() internal pure virtual returns (uint256);\n\n    /**\n     * @dev Function to deposit Ether into the contract. If the user has not deposited before and meets the bonus requirement, a bonus is added.\n     */\n    function deposit() public payable {\n        if (!deposited[msg.sender] && msg.value >= getBonusRequirement()) {\n            balances[msg.sender] += getBonusAmount();\n        }\n        deposited[msg.sender] = true;\n        balances[msg.sender] += msg.value;\n    }\n\n    /**\n     * @dev Function to withdraw Ether from the contract.\n     * @param amount The amount to withdraw.\n     */\n    function withdraw(uint256 amount) public {\n        require(balances[msg.sender] >= amount, \"Invalid amount\");\n        balances[msg.sender] -= amount;\n        (bool sent, ) = payable(msg.sender).call{value: amount}(\"\");\n        require(sent, \"Failed to send\");\n    }\n\n    /**\n     * @dev Function to get the balance of the sender.\n     * @return The balance of the sender as a uint256.\n     */\n    function getBalance() public view returns (uint256) {\n        return balances[msg.sender];\n    }\n}\n\n/**\n * @title Bank Contract\n * @dev This contract implements the AbstractContract and defines the bonus amount and bonus requirement.\n */\ncontract Bank is AbstractContract {\n    /**\n     * @dev Returns the bonus amount to be awarded.\n     * @return The bonus amount as a uint256.\n     */\n    function getBonusAmount() internal pure override returns (uint256) {\n        return 150 wei;\n    }\n\n    /**\n     * @dev Returns the minimum deposit required to receive a bonus.\n     * @return The bonus requirement amount as a uint256.\n     */\n    function getBonusRequirement() internal pure override returns (uint256) {\n        return 1000 wei;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"advanced/AbstractContract.sol": {
				"AbstractContract": {
					"abi": [
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides the structure for a sign-up bonus system with deposit and withdrawal functionalities.",
						"kind": "dev",
						"methods": {
							"deposit()": {
								"details": "Function to deposit Ether into the contract. If the user has not deposited before and meets the bonus requirement, a bonus is added."
							},
							"getBalance()": {
								"details": "Function to get the balance of the sender.",
								"returns": {
									"_0": "The balance of the sender as a uint256."
								}
							},
							"withdraw(uint256)": {
								"details": "Function to withdraw Ether from the contract.",
								"params": {
									"amount": "The amount to withdraw."
								}
							}
						},
						"title": "AbstractContract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit()": "d0e30db0",
							"getBalance()": "12065fe0",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This abstract contract provides the structure for a sign-up bonus system with deposit and withdrawal functionalities.\",\"kind\":\"dev\",\"methods\":{\"deposit()\":{\"details\":\"Function to deposit Ether into the contract. If the user has not deposited before and meets the bonus requirement, a bonus is added.\"},\"getBalance()\":{\"details\":\"Function to get the balance of the sender.\",\"returns\":{\"_0\":\"The balance of the sender as a uint256.\"}},\"withdraw(uint256)\":{\"details\":\"Function to withdraw Ether from the contract.\",\"params\":{\"amount\":\"The amount to withdraw.\"}}},\"title\":\"AbstractContract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"advanced/AbstractContract.sol\":\"AbstractContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"advanced/AbstractContract.sol\":{\"keccak256\":\"0x29fcbe0e73a589a430126f6d7433a993061c780b03cccb6e1483d3f27dfd6f5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb4c9530229f1306794add03c4be388b5ee16e9b2fb40e898a24bf71aafcdff8\",\"dweb:/ipfs/QmbyZT3UWhHrwaWatBnhQT7BSqigtTDq3NvenH3xEajTp5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "advanced/AbstractContract.sol:AbstractContract",
								"label": "balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 10,
								"contract": "advanced/AbstractContract.sol:AbstractContract",
								"label": "deposited",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Bank": {
					"abi": [
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This contract implements the AbstractContract and defines the bonus amount and bonus requirement.",
						"kind": "dev",
						"methods": {
							"deposit()": {
								"details": "Function to deposit Ether into the contract. If the user has not deposited before and meets the bonus requirement, a bonus is added."
							},
							"getBalance()": {
								"details": "Function to get the balance of the sender.",
								"returns": {
									"_0": "The balance of the sender as a uint256."
								}
							},
							"withdraw(uint256)": {
								"details": "Function to withdraw Ether from the contract.",
								"params": {
									"amount": "The amount to withdraw."
								}
							}
						},
						"title": "Bank Contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"advanced/AbstractContract.sol\":2010:2517  contract Bank is AbstractContract {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"advanced/AbstractContract.sol\":2010:2517  contract Bank is AbstractContract {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x12065fe0\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"advanced/AbstractContract.sol\":1772:1868  function getBalance() public view returns (uint256) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_5:\n      pop\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"advanced/AbstractContract.sol\":1375:1640  function withdraw(uint256 amount) public {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      stop\n        /* \"advanced/AbstractContract.sol\":988:1250  function deposit() public payable {... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"advanced/AbstractContract.sol\":1772:1868  function getBalance() public view returns (uint256) {... */\n    tag_7:\n        /* \"advanced/AbstractContract.sol\":1815:1822  uint256 */\n      0x00\n        /* \"advanced/AbstractContract.sol\":1841:1849  balances */\n      dup1\n        /* \"advanced/AbstractContract.sol\":1841:1861  balances[msg.sender] */\n      0x00\n        /* \"advanced/AbstractContract.sol\":1850:1860  msg.sender */\n      caller\n        /* \"advanced/AbstractContract.sol\":1841:1861  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"advanced/AbstractContract.sol\":1834:1861  return balances[msg.sender] */\n      swap1\n      pop\n        /* \"advanced/AbstractContract.sol\":1772:1868  function getBalance() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"advanced/AbstractContract.sol\":1375:1640  function withdraw(uint256 amount) public {... */\n    tag_14:\n        /* \"advanced/AbstractContract.sol\":1458:1464  amount */\n      dup1\n        /* \"advanced/AbstractContract.sol\":1434:1442  balances */\n      0x00\n        /* \"advanced/AbstractContract.sol\":1434:1454  balances[msg.sender] */\n      dup1\n        /* \"advanced/AbstractContract.sol\":1443:1453  msg.sender */\n      caller\n        /* \"advanced/AbstractContract.sol\":1434:1454  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"advanced/AbstractContract.sol\":1434:1464  balances[msg.sender] >= amount */\n      lt\n      iszero\n        /* \"advanced/AbstractContract.sol\":1426:1483  require(balances[msg.sender] >= amount, \"Invalid amount\") */\n      tag_19\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_20\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"advanced/AbstractContract.sol\":1517:1523  amount */\n      dup1\n        /* \"advanced/AbstractContract.sol\":1493:1501  balances */\n      0x00\n        /* \"advanced/AbstractContract.sol\":1493:1513  balances[msg.sender] */\n      dup1\n        /* \"advanced/AbstractContract.sol\":1502:1512  msg.sender */\n      caller\n        /* \"advanced/AbstractContract.sol\":1493:1513  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"advanced/AbstractContract.sol\":1493:1523  balances[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"advanced/AbstractContract.sol\":1534:1543  bool sent */\n      0x00\n        /* \"advanced/AbstractContract.sol\":1557:1567  msg.sender */\n      caller\n        /* \"advanced/AbstractContract.sol\":1549:1573  payable(msg.sender).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"advanced/AbstractContract.sol\":1581:1587  amount */\n      dup3\n        /* \"advanced/AbstractContract.sol\":1549:1592  payable(msg.sender).call{value: amount}(\"\") */\n      mload(0x40)\n      tag_24\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_28\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_27)\n    tag_28:\n      0x60\n      swap2\n      pop\n    tag_27:\n      pop\n        /* \"advanced/AbstractContract.sol\":1533:1592  (bool sent, ) = payable(msg.sender).call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"advanced/AbstractContract.sol\":1610:1614  sent */\n      dup1\n        /* \"advanced/AbstractContract.sol\":1602:1633  require(sent, \"Failed to send\") */\n      tag_29\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_30\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_29:\n        /* \"advanced/AbstractContract.sol\":1416:1640  {... */\n      pop\n        /* \"advanced/AbstractContract.sol\":1375:1640  function withdraw(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"advanced/AbstractContract.sol\":988:1250  function deposit() public payable {... */\n    tag_16:\n        /* \"advanced/AbstractContract.sol\":1037:1046  deposited */\n      0x01\n        /* \"advanced/AbstractContract.sol\":1037:1058  deposited[msg.sender] */\n      0x00\n        /* \"advanced/AbstractContract.sol\":1047:1057  msg.sender */\n      caller\n        /* \"advanced/AbstractContract.sol\":1037:1058  deposited[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"advanced/AbstractContract.sol\":1036:1058  !deposited[msg.sender] */\n      iszero\n        /* \"advanced/AbstractContract.sol\":1036:1096  !deposited[msg.sender] && msg.value >= getBonusRequirement() */\n      dup1\n      iszero\n      tag_33\n      jumpi\n      pop\n        /* \"advanced/AbstractContract.sol\":1075:1096  getBonusRequirement() */\n      tag_34\n        /* \"advanced/AbstractContract.sol\":1075:1094  getBonusRequirement */\n      tag_35\n        /* \"advanced/AbstractContract.sol\":1075:1096  getBonusRequirement() */\n      jump\t// in\n    tag_34:\n        /* \"advanced/AbstractContract.sol\":1062:1071  msg.value */\n      callvalue\n        /* \"advanced/AbstractContract.sol\":1062:1096  msg.value >= getBonusRequirement() */\n      lt\n      iszero\n        /* \"advanced/AbstractContract.sol\":1036:1096  !deposited[msg.sender] && msg.value >= getBonusRequirement() */\n    tag_33:\n        /* \"advanced/AbstractContract.sol\":1032:1163  if (!deposited[msg.sender] && msg.value >= getBonusRequirement()) {... */\n      iszero\n      tag_36\n      jumpi\n        /* \"advanced/AbstractContract.sol\":1136:1152  getBonusAmount() */\n      tag_37\n        /* \"advanced/AbstractContract.sol\":1136:1150  getBonusAmount */\n      tag_38\n        /* \"advanced/AbstractContract.sol\":1136:1152  getBonusAmount() */\n      jump\t// in\n    tag_37:\n        /* \"advanced/AbstractContract.sol\":1112:1120  balances */\n      0x00\n        /* \"advanced/AbstractContract.sol\":1112:1132  balances[msg.sender] */\n      dup1\n        /* \"advanced/AbstractContract.sol\":1121:1131  msg.sender */\n      caller\n        /* \"advanced/AbstractContract.sol\":1112:1132  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"advanced/AbstractContract.sol\":1112:1152  balances[msg.sender] += getBonusAmount() */\n      dup3\n      dup3\n      sload\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"advanced/AbstractContract.sol\":1032:1163  if (!deposited[msg.sender] && msg.value >= getBonusRequirement()) {... */\n    tag_36:\n        /* \"advanced/AbstractContract.sol\":1196:1200  true */\n      0x01\n        /* \"advanced/AbstractContract.sol\":1172:1181  deposited */\n      dup1\n        /* \"advanced/AbstractContract.sol\":1172:1193  deposited[msg.sender] */\n      0x00\n        /* \"advanced/AbstractContract.sol\":1182:1192  msg.sender */\n      caller\n        /* \"advanced/AbstractContract.sol\":1172:1193  deposited[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"advanced/AbstractContract.sol\":1172:1200  deposited[msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"advanced/AbstractContract.sol\":1234:1243  msg.value */\n      callvalue\n        /* \"advanced/AbstractContract.sol\":1210:1218  balances */\n      0x00\n        /* \"advanced/AbstractContract.sol\":1210:1230  balances[msg.sender] */\n      dup1\n        /* \"advanced/AbstractContract.sol\":1219:1229  msg.sender */\n      caller\n        /* \"advanced/AbstractContract.sol\":1210:1230  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"advanced/AbstractContract.sol\":1210:1243  balances[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_41\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_41:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"advanced/AbstractContract.sol\":988:1250  function deposit() public payable {... */\n      jump\t// out\n        /* \"advanced/AbstractContract.sol\":2411:2515  function getBonusRequirement() internal pure override returns (uint256) {... */\n    tag_35:\n        /* \"advanced/AbstractContract.sol\":2474:2481  uint256 */\n      0x00\n        /* \"advanced/AbstractContract.sol\":2500:2508  1000 wei */\n      0x03e8\n        /* \"advanced/AbstractContract.sol\":2493:2508  return 1000 wei */\n      swap1\n      pop\n        /* \"advanced/AbstractContract.sol\":2411:2515  function getBonusRequirement() internal pure override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"advanced/AbstractContract.sol\":2164:2262  function getBonusAmount() internal pure override returns (uint256) {... */\n    tag_38:\n        /* \"advanced/AbstractContract.sol\":2222:2229  uint256 */\n      0x00\n        /* \"advanced/AbstractContract.sol\":2248:2255  150 wei */\n      0x96\n        /* \"advanced/AbstractContract.sol\":2241:2255  return 150 wei */\n      swap1\n      pop\n        /* \"advanced/AbstractContract.sol\":2164:2262  function getBonusAmount() internal pure override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_44:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_45:\n        /* \"#utility.yul\":177:201   */\n      tag_63\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_44\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_9:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_65\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_45\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_47:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_49:\n        /* \"#utility.yul\":842:866   */\n      tag_70\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_44\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_71\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_71:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_50:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_73\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_49\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_13:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_75\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_76\n      tag_47\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1118:1237   */\n    tag_75:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_77\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_50\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1546   */\n    tag_51:\n        /* \"#utility.yul\":1461:1472   */\n      0x00\n        /* \"#utility.yul\":1495:1501   */\n      dup3\n        /* \"#utility.yul\":1490:1493   */\n      dup3\n        /* \"#utility.yul\":1483:1502   */\n      mstore\n        /* \"#utility.yul\":1535:1539   */\n      0x20\n        /* \"#utility.yul\":1530:1533   */\n      dup3\n        /* \"#utility.yul\":1526:1540   */\n      add\n        /* \"#utility.yul\":1511:1540   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1546   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1552:1716   */\n    tag_52:\n        /* \"#utility.yul\":1692:1708   */\n      0x496e76616c696420616d6f756e74000000000000000000000000000000000000\n        /* \"#utility.yul\":1688:1689   */\n      0x00\n        /* \"#utility.yul\":1680:1686   */\n      dup3\n        /* \"#utility.yul\":1676:1690   */\n      add\n        /* \"#utility.yul\":1669:1709   */\n      mstore\n        /* \"#utility.yul\":1552:1716   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1722:2088   */\n    tag_53:\n        /* \"#utility.yul\":1864:1867   */\n      0x00\n        /* \"#utility.yul\":1885:1952   */\n      tag_81\n        /* \"#utility.yul\":1949:1951   */\n      0x0e\n        /* \"#utility.yul\":1944:1947   */\n      dup4\n        /* \"#utility.yul\":1885:1952   */\n      tag_51\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1878:1952   */\n      swap2\n      pop\n        /* \"#utility.yul\":1961:2054   */\n      tag_82\n        /* \"#utility.yul\":2050:2053   */\n      dup3\n        /* \"#utility.yul\":1961:2054   */\n      tag_52\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2079:2081   */\n      0x20\n        /* \"#utility.yul\":2074:2077   */\n      dup3\n        /* \"#utility.yul\":2070:2082   */\n      add\n        /* \"#utility.yul\":2063:2082   */\n      swap1\n      pop\n        /* \"#utility.yul\":1722:2088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2094:2513   */\n    tag_21:\n        /* \"#utility.yul\":2260:2264   */\n      0x00\n        /* \"#utility.yul\":2298:2300   */\n      0x20\n        /* \"#utility.yul\":2287:2296   */\n      dup3\n        /* \"#utility.yul\":2283:2301   */\n      add\n        /* \"#utility.yul\":2275:2301   */\n      swap1\n      pop\n        /* \"#utility.yul\":2347:2356   */\n      dup2\n        /* \"#utility.yul\":2341:2345   */\n      dup2\n        /* \"#utility.yul\":2337:2357   */\n      sub\n        /* \"#utility.yul\":2333:2334   */\n      0x00\n        /* \"#utility.yul\":2322:2331   */\n      dup4\n        /* \"#utility.yul\":2318:2335   */\n      add\n        /* \"#utility.yul\":2311:2358   */\n      mstore\n        /* \"#utility.yul\":2375:2506   */\n      tag_84\n        /* \"#utility.yul\":2501:2505   */\n      dup2\n        /* \"#utility.yul\":2375:2506   */\n      tag_53\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":2367:2506   */\n      swap1\n      pop\n        /* \"#utility.yul\":2094:2513   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2519:2699   */\n    tag_54:\n        /* \"#utility.yul\":2567:2644   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2564:2565   */\n      0x00\n        /* \"#utility.yul\":2557:2645   */\n      mstore\n        /* \"#utility.yul\":2664:2668   */\n      0x11\n        /* \"#utility.yul\":2661:2662   */\n      0x04\n        /* \"#utility.yul\":2654:2669   */\n      mstore\n        /* \"#utility.yul\":2688:2692   */\n      0x24\n        /* \"#utility.yul\":2685:2686   */\n      0x00\n        /* \"#utility.yul\":2678:2693   */\n      revert\n        /* \"#utility.yul\":2705:2899   */\n    tag_23:\n        /* \"#utility.yul\":2745:2749   */\n      0x00\n        /* \"#utility.yul\":2765:2785   */\n      tag_87\n        /* \"#utility.yul\":2783:2784   */\n      dup3\n        /* \"#utility.yul\":2765:2785   */\n      tag_44\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":2760:2785   */\n      swap2\n      pop\n        /* \"#utility.yul\":2799:2819   */\n      tag_88\n        /* \"#utility.yul\":2817:2818   */\n      dup4\n        /* \"#utility.yul\":2799:2819   */\n      tag_44\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":2794:2819   */\n      swap3\n      pop\n        /* \"#utility.yul\":2843:2844   */\n      dup3\n        /* \"#utility.yul\":2840:2841   */\n      dup3\n        /* \"#utility.yul\":2836:2845   */\n      sub\n        /* \"#utility.yul\":2828:2845   */\n      swap1\n      pop\n        /* \"#utility.yul\":2867:2868   */\n      dup2\n        /* \"#utility.yul\":2861:2865   */\n      dup2\n        /* \"#utility.yul\":2858:2869   */\n      gt\n        /* \"#utility.yul\":2855:2892   */\n      iszero\n      tag_89\n      jumpi\n        /* \"#utility.yul\":2872:2890   */\n      tag_90\n      tag_54\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":2855:2892   */\n    tag_89:\n        /* \"#utility.yul\":2705:2899   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2905:3052   */\n    tag_55:\n        /* \"#utility.yul\":3006:3017   */\n      0x00\n        /* \"#utility.yul\":3043:3046   */\n      dup2\n        /* \"#utility.yul\":3028:3046   */\n      swap1\n      pop\n        /* \"#utility.yul\":2905:3052   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3058:3172   */\n    tag_56:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3178:3576   */\n    tag_57:\n        /* \"#utility.yul\":3337:3340   */\n      0x00\n        /* \"#utility.yul\":3358:3441   */\n      tag_94\n        /* \"#utility.yul\":3439:3440   */\n      0x00\n        /* \"#utility.yul\":3434:3437   */\n      dup4\n        /* \"#utility.yul\":3358:3441   */\n      tag_55\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":3351:3441   */\n      swap2\n      pop\n        /* \"#utility.yul\":3450:3543   */\n      tag_95\n        /* \"#utility.yul\":3539:3542   */\n      dup3\n        /* \"#utility.yul\":3450:3543   */\n      tag_56\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":3568:3569   */\n      0x00\n        /* \"#utility.yul\":3563:3566   */\n      dup3\n        /* \"#utility.yul\":3559:3570   */\n      add\n        /* \"#utility.yul\":3552:3570   */\n      swap1\n      pop\n        /* \"#utility.yul\":3178:3576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3582:3961   */\n    tag_25:\n        /* \"#utility.yul\":3766:3769   */\n      0x00\n        /* \"#utility.yul\":3788:3935   */\n      tag_97\n        /* \"#utility.yul\":3931:3934   */\n      dup3\n        /* \"#utility.yul\":3788:3935   */\n      tag_57\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":3781:3935   */\n      swap2\n      pop\n        /* \"#utility.yul\":3952:3955   */\n      dup2\n        /* \"#utility.yul\":3945:3955   */\n      swap1\n      pop\n        /* \"#utility.yul\":3582:3961   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3967:4131   */\n    tag_58:\n        /* \"#utility.yul\":4107:4123   */\n      0x4661696c656420746f2073656e64000000000000000000000000000000000000\n        /* \"#utility.yul\":4103:4104   */\n      0x00\n        /* \"#utility.yul\":4095:4101   */\n      dup3\n        /* \"#utility.yul\":4091:4105   */\n      add\n        /* \"#utility.yul\":4084:4124   */\n      mstore\n        /* \"#utility.yul\":3967:4131   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4503   */\n    tag_59:\n        /* \"#utility.yul\":4279:4282   */\n      0x00\n        /* \"#utility.yul\":4300:4367   */\n      tag_100\n        /* \"#utility.yul\":4364:4366   */\n      0x0e\n        /* \"#utility.yul\":4359:4362   */\n      dup4\n        /* \"#utility.yul\":4300:4367   */\n      tag_51\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":4293:4367   */\n      swap2\n      pop\n        /* \"#utility.yul\":4376:4469   */\n      tag_101\n        /* \"#utility.yul\":4465:4468   */\n      dup3\n        /* \"#utility.yul\":4376:4469   */\n      tag_58\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":4494:4496   */\n      0x20\n        /* \"#utility.yul\":4489:4492   */\n      dup3\n        /* \"#utility.yul\":4485:4497   */\n      add\n        /* \"#utility.yul\":4478:4497   */\n      swap1\n      pop\n        /* \"#utility.yul\":4137:4503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4509:4928   */\n    tag_31:\n        /* \"#utility.yul\":4675:4679   */\n      0x00\n        /* \"#utility.yul\":4713:4715   */\n      0x20\n        /* \"#utility.yul\":4702:4711   */\n      dup3\n        /* \"#utility.yul\":4698:4716   */\n      add\n        /* \"#utility.yul\":4690:4716   */\n      swap1\n      pop\n        /* \"#utility.yul\":4762:4771   */\n      dup2\n        /* \"#utility.yul\":4756:4760   */\n      dup2\n        /* \"#utility.yul\":4752:4772   */\n      sub\n        /* \"#utility.yul\":4748:4749   */\n      0x00\n        /* \"#utility.yul\":4737:4746   */\n      dup4\n        /* \"#utility.yul\":4733:4750   */\n      add\n        /* \"#utility.yul\":4726:4773   */\n      mstore\n        /* \"#utility.yul\":4790:4921   */\n      tag_103\n        /* \"#utility.yul\":4916:4920   */\n      dup2\n        /* \"#utility.yul\":4790:4921   */\n      tag_59\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":4782:4921   */\n      swap1\n      pop\n        /* \"#utility.yul\":4509:4928   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4934:5125   */\n    tag_40:\n        /* \"#utility.yul\":4974:4977   */\n      0x00\n        /* \"#utility.yul\":4993:5013   */\n      tag_105\n        /* \"#utility.yul\":5011:5012   */\n      dup3\n        /* \"#utility.yul\":4993:5013   */\n      tag_44\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":4988:5013   */\n      swap2\n      pop\n        /* \"#utility.yul\":5027:5047   */\n      tag_106\n        /* \"#utility.yul\":5045:5046   */\n      dup4\n        /* \"#utility.yul\":5027:5047   */\n      tag_44\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":5022:5047   */\n      swap3\n      pop\n        /* \"#utility.yul\":5070:5071   */\n      dup3\n        /* \"#utility.yul\":5067:5068   */\n      dup3\n        /* \"#utility.yul\":5063:5072   */\n      add\n        /* \"#utility.yul\":5056:5072   */\n      swap1\n      pop\n        /* \"#utility.yul\":5091:5094   */\n      dup1\n        /* \"#utility.yul\":5088:5089   */\n      dup3\n        /* \"#utility.yul\":5085:5095   */\n      gt\n        /* \"#utility.yul\":5082:5118   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":5098:5116   */\n      tag_108\n      tag_54\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":5082:5118   */\n    tag_107:\n        /* \"#utility.yul\":4934:5125   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202a2557a8e43e30bd8e0b6b267d237c664d4b1a7f00a90ee29ccaeca40733ba5864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5061063d8061001c5f395ff3fe608060405260043610610033575f3560e01c806312065fe0146100375780632e1a7d4d14610061578063d0e30db014610089575b5f80fd5b348015610042575f80fd5b5061004b610093565b60405161005891906103e1565b60405180910390f35b34801561006c575f80fd5b5061008760048036038101906100829190610428565b6100d6565b005b610091610253565b005b5f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905090565b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610155576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014c906104ad565b60405180910390fd5b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546101a091906104f8565b925050819055505f3373ffffffffffffffffffffffffffffffffffffffff16826040516101cc90610558565b5f6040518083038185875af1925050503d805f8114610206576040519150601f19603f3d011682016040523d82523d5f602084013e61020b565b606091505b505090508061024f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610246906105b6565b60405180910390fd5b5050565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161580156102b157506102ad6103b8565b3410155b15610310576102be6103c1565b5f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461030891906105d4565b925050819055505b6001805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550345f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546103af91906105d4565b92505081905550565b5f6103e8905090565b5f6096905090565b5f819050919050565b6103db816103c9565b82525050565b5f6020820190506103f45f8301846103d2565b92915050565b5f80fd5b610407816103c9565b8114610411575f80fd5b50565b5f81359050610422816103fe565b92915050565b5f6020828403121561043d5761043c6103fa565b5b5f61044a84828501610414565b91505092915050565b5f82825260208201905092915050565b7f496e76616c696420616d6f756e740000000000000000000000000000000000005f82015250565b5f610497600e83610453565b91506104a282610463565b602082019050919050565b5f6020820190508181035f8301526104c48161048b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610502826103c9565b915061050d836103c9565b9250828203905081811115610525576105246104cb565b5b92915050565b5f81905092915050565b50565b5f6105435f8361052b565b915061054e82610535565b5f82019050919050565b5f61056282610538565b9150819050919050565b7f4661696c656420746f2073656e640000000000000000000000000000000000005f82015250565b5f6105a0600e83610453565b91506105ab8261056c565b602082019050919050565b5f6020820190508181035f8301526105cd81610594565b9050919050565b5f6105de826103c9565b91506105e9836103c9565b9250828201905080821115610601576106006104cb565b5b9291505056fea26469706673582212202a2557a8e43e30bd8e0b6b267d237c664d4b1a7f00a90ee29ccaeca40733ba5864736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x63D DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x33 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x37 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x89 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B PUSH2 0x93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x428 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x91 PUSH2 0x253 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x155 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C SWAP1 PUSH2 0x4AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x4F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP1 PUSH2 0x558 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x206 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x20B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x24F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x246 SWAP1 PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x2B1 JUMPI POP PUSH2 0x2AD PUSH2 0x3B8 JUMP JUMPDEST CALLVALUE LT ISZERO JUMPDEST ISZERO PUSH2 0x310 JUMPI PUSH2 0x2BE PUSH2 0x3C1 JUMP JUMPDEST PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x5D4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x5D4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3E8 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x96 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DB DUP2 PUSH2 0x3C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3F4 PUSH0 DUP4 ADD DUP5 PUSH2 0x3D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x407 DUP2 PUSH2 0x3C9 JUMP JUMPDEST DUP2 EQ PUSH2 0x411 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x422 DUP2 PUSH2 0x3FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43D JUMPI PUSH2 0x43C PUSH2 0x3FA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x44A DUP5 DUP3 DUP6 ADD PUSH2 0x414 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x497 PUSH1 0xE DUP4 PUSH2 0x453 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A2 DUP3 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4C4 DUP2 PUSH2 0x48B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x502 DUP3 PUSH2 0x3C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x50D DUP4 PUSH2 0x3C9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x525 JUMPI PUSH2 0x524 PUSH2 0x4CB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x543 PUSH0 DUP4 PUSH2 0x52B JUMP JUMPDEST SWAP2 POP PUSH2 0x54E DUP3 PUSH2 0x535 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x562 DUP3 PUSH2 0x538 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E64000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5A0 PUSH1 0xE DUP4 PUSH2 0x453 JUMP JUMPDEST SWAP2 POP PUSH2 0x5AB DUP3 PUSH2 0x56C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5CD DUP2 PUSH2 0x594 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5DE DUP3 PUSH2 0x3C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x5E9 DUP4 PUSH2 0x3C9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x601 JUMPI PUSH2 0x600 PUSH2 0x4CB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0x25 JUMPI 0xA8 0xE4 RETURNDATACOPY ADDRESS 0xBD DUP15 SIGNEXTEND PUSH12 0x267D237C664D4B1A7F00A90E 0xE2 SWAP13 0xCA 0xEC LOG4 SMOD CALLER 0xBA PC PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "2010:507:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@deposit_63": {
									"entryPoint": 595,
									"id": 63,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBalance_117": {
									"entryPoint": 147,
									"id": 117,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getBonusAmount_131": {
									"entryPoint": 961,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getBonusRequirement_141": {
									"entryPoint": 952,
									"id": 141,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@withdraw_105": {
									"entryPoint": 214,
									"id": 105,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e355fd8fe19d0fc36a25d0f63f734a365fe521f7932cec67eca735765d8ca408_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e355fd8fe19d0fc36a25d0f63f734a365fe521f7932cec67eca735765d8ca408__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1227,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1018,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1": {
									"entryPoint": 1123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 1333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e355fd8fe19d0fc36a25d0f63f734a365fe521f7932cec67eca735765d8ca408": {
									"entryPoint": 1388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5128:1",
										"nodeType": "YulBlock",
										"src": "0:5128:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:1",
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nativeSrc": "62:16:1",
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:1",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nativeSrc": "155:53:1",
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nativeSrc": "177:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nativeSrc": "165:37:1",
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nativeSrc": "165:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:1",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:1",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nativeSrc": "312:124:1",
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nativeSrc": "322:26:1",
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:1",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nativeSrc": "330:18:1",
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:1",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nativeSrc": "411:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nativeSrc": "358:71:1",
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nativeSrc": "358:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:1",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:1",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:1",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nativeSrc": "482:35:1",
													"nodeType": "YulBlock",
													"src": "482:35:1",
													"statements": [
														{
															"nativeSrc": "492:19:1",
															"nodeType": "YulAssignment",
															"src": "492:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:1",
																		"nodeType": "YulLiteral",
																		"src": "508:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:1"
																},
																"nativeSrc": "502:9:1",
																"nodeType": "YulFunctionCall",
																"src": "502:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:1",
														"nodeType": "YulTypedName",
														"src": "475:6:1",
														"type": ""
													}
												],
												"src": "442:75:1"
											},
											{
												"body": {
													"nativeSrc": "612:28:1",
													"nodeType": "YulBlock",
													"src": "612:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:1",
																		"nodeType": "YulLiteral",
																		"src": "629:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:1",
																		"nodeType": "YulLiteral",
																		"src": "632:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:1"
																},
																"nativeSrc": "622:12:1",
																"nodeType": "YulFunctionCall",
																"src": "622:12:1"
															},
															"nativeSrc": "622:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:1"
											},
											{
												"body": {
													"nativeSrc": "735:28:1",
													"nodeType": "YulBlock",
													"src": "735:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:1",
																		"nodeType": "YulLiteral",
																		"src": "752:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:1",
																		"nodeType": "YulLiteral",
																		"src": "755:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:1"
																},
																"nativeSrc": "745:12:1",
																"nodeType": "YulFunctionCall",
																"src": "745:12:1"
															},
															"nativeSrc": "745:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:1"
											},
											{
												"body": {
													"nativeSrc": "812:79:1",
													"nodeType": "YulBlock",
													"src": "812:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:16:1",
																"nodeType": "YulBlock",
																"src": "869:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "878:1:1",
																					"nodeType": "YulLiteral",
																					"src": "878:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "881:1:1",
																					"nodeType": "YulLiteral",
																					"src": "881:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "871:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:1"
																			},
																			"nativeSrc": "871:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:1"
																		},
																		"nativeSrc": "871:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "835:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "860:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "842:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:1"
																				},
																				"nativeSrc": "842:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "832:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:1"
																		},
																		"nativeSrc": "832:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "825:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:1"
																},
																"nativeSrc": "825:43:1",
																"nodeType": "YulFunctionCall",
																"src": "825:43:1"
															},
															"nativeSrc": "822:63:1",
															"nodeType": "YulIf",
															"src": "822:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "769:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "805:5:1",
														"nodeType": "YulTypedName",
														"src": "805:5:1",
														"type": ""
													}
												],
												"src": "769:122:1"
											},
											{
												"body": {
													"nativeSrc": "949:87:1",
													"nodeType": "YulBlock",
													"src": "949:87:1",
													"statements": [
														{
															"nativeSrc": "959:29:1",
															"nodeType": "YulAssignment",
															"src": "959:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "981:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "968:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:1"
																},
																"nativeSrc": "968:20:1",
																"nodeType": "YulFunctionCall",
																"src": "968:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "959:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1024:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "997:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:1"
																},
																"nativeSrc": "997:33:1",
																"nodeType": "YulFunctionCall",
																"src": "997:33:1"
															},
															"nativeSrc": "997:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "997:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "897:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "927:6:1",
														"nodeType": "YulTypedName",
														"src": "927:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "935:3:1",
														"nodeType": "YulTypedName",
														"src": "935:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "943:5:1",
														"nodeType": "YulTypedName",
														"src": "943:5:1",
														"type": ""
													}
												],
												"src": "897:139:1"
											},
											{
												"body": {
													"nativeSrc": "1108:263:1",
													"nodeType": "YulBlock",
													"src": "1108:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1154:83:1",
																"nodeType": "YulBlock",
																"src": "1154:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1156:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:1"
																			},
																			"nativeSrc": "1156:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:1"
																		},
																		"nativeSrc": "1156:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1129:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1138:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1125:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:1"
																		},
																		"nativeSrc": "1125:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1150:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1121:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:1"
																},
																"nativeSrc": "1121:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1121:32:1"
															},
															"nativeSrc": "1118:119:1",
															"nodeType": "YulIf",
															"src": "1118:119:1"
														},
														{
															"nativeSrc": "1247:117:1",
															"nodeType": "YulBlock",
															"src": "1247:117:1",
															"statements": [
																{
																	"nativeSrc": "1262:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1276:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1266:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1291:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1291:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1326:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1337:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1322:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:1"
																				},
																				"nativeSrc": "1322:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1346:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1301:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:1"
																		},
																		"nativeSrc": "1301:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1291:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1042:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1078:9:1",
														"nodeType": "YulTypedName",
														"src": "1078:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1089:7:1",
														"nodeType": "YulTypedName",
														"src": "1089:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1101:6:1",
														"nodeType": "YulTypedName",
														"src": "1101:6:1",
														"type": ""
													}
												],
												"src": "1042:329:1"
											},
											{
												"body": {
													"nativeSrc": "1473:73:1",
													"nodeType": "YulBlock",
													"src": "1473:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1490:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1495:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1495:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1483:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1483:6:1"
																},
																"nativeSrc": "1483:19:1",
																"nodeType": "YulFunctionCall",
																"src": "1483:19:1"
															},
															"nativeSrc": "1483:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "1483:19:1"
														},
														{
															"nativeSrc": "1511:29:1",
															"nodeType": "YulAssignment",
															"src": "1511:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1530:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1530:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1535:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1535:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1526:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1526:3:1"
																},
																"nativeSrc": "1526:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1526:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1511:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "1511:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1377:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1445:3:1",
														"nodeType": "YulTypedName",
														"src": "1445:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1450:6:1",
														"nodeType": "YulTypedName",
														"src": "1450:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1461:11:1",
														"nodeType": "YulTypedName",
														"src": "1461:11:1",
														"type": ""
													}
												],
												"src": "1377:169:1"
											},
											{
												"body": {
													"nativeSrc": "1658:58:1",
													"nodeType": "YulBlock",
													"src": "1658:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1680:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1680:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1688:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1688:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1676:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1676:3:1"
																		},
																		"nativeSrc": "1676:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1676:14:1"
																	},
																	{
																		"hexValue": "496e76616c696420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "1692:16:1",
																		"nodeType": "YulLiteral",
																		"src": "1692:16:1",
																		"type": "",
																		"value": "Invalid amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1669:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1669:6:1"
																},
																"nativeSrc": "1669:40:1",
																"nodeType": "YulFunctionCall",
																"src": "1669:40:1"
															},
															"nativeSrc": "1669:40:1",
															"nodeType": "YulExpressionStatement",
															"src": "1669:40:1"
														}
													]
												},
												"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
												"nativeSrc": "1552:164:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1650:6:1",
														"nodeType": "YulTypedName",
														"src": "1650:6:1",
														"type": ""
													}
												],
												"src": "1552:164:1"
											},
											{
												"body": {
													"nativeSrc": "1868:220:1",
													"nodeType": "YulBlock",
													"src": "1868:220:1",
													"statements": [
														{
															"nativeSrc": "1878:74:1",
															"nodeType": "YulAssignment",
															"src": "1878:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1944:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1944:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1949:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1949:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1885:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "1885:58:1"
																},
																"nativeSrc": "1885:67:1",
																"nodeType": "YulFunctionCall",
																"src": "1885:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1878:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1878:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2050:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2050:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																	"nativeSrc": "1961:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "1961:88:1"
																},
																"nativeSrc": "1961:93:1",
																"nodeType": "YulFunctionCall",
																"src": "1961:93:1"
															},
															"nativeSrc": "1961:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "1961:93:1"
														},
														{
															"nativeSrc": "2063:19:1",
															"nodeType": "YulAssignment",
															"src": "2063:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2074:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2074:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2079:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2079:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2070:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2070:3:1"
																},
																"nativeSrc": "2070:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2070:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2063:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2063:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1722:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1856:3:1",
														"nodeType": "YulTypedName",
														"src": "1856:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1864:3:1",
														"nodeType": "YulTypedName",
														"src": "1864:3:1",
														"type": ""
													}
												],
												"src": "1722:366:1"
											},
											{
												"body": {
													"nativeSrc": "2265:248:1",
													"nodeType": "YulBlock",
													"src": "2265:248:1",
													"statements": [
														{
															"nativeSrc": "2275:26:1",
															"nodeType": "YulAssignment",
															"src": "2275:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2287:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2287:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2298:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2298:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2283:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2283:3:1"
																},
																"nativeSrc": "2283:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2283:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2275:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2275:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2322:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2322:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2333:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2333:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2318:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2318:3:1"
																		},
																		"nativeSrc": "2318:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2318:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2341:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2341:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2347:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2347:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2337:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:1"
																		},
																		"nativeSrc": "2337:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2311:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2311:6:1"
																},
																"nativeSrc": "2311:47:1",
																"nodeType": "YulFunctionCall",
																"src": "2311:47:1"
															},
															"nativeSrc": "2311:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "2311:47:1"
														},
														{
															"nativeSrc": "2367:139:1",
															"nodeType": "YulAssignment",
															"src": "2367:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2501:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2501:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2375:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "2375:124:1"
																},
																"nativeSrc": "2375:131:1",
																"nodeType": "YulFunctionCall",
																"src": "2375:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2367:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2367:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2094:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2245:9:1",
														"nodeType": "YulTypedName",
														"src": "2245:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2260:4:1",
														"nodeType": "YulTypedName",
														"src": "2260:4:1",
														"type": ""
													}
												],
												"src": "2094:419:1"
											},
											{
												"body": {
													"nativeSrc": "2547:152:1",
													"nodeType": "YulBlock",
													"src": "2547:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2564:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2564:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2567:77:1",
																		"nodeType": "YulLiteral",
																		"src": "2567:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2557:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2557:6:1"
																},
																"nativeSrc": "2557:88:1",
																"nodeType": "YulFunctionCall",
																"src": "2557:88:1"
															},
															"nativeSrc": "2557:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "2557:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2661:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2661:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2664:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2654:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2654:6:1"
																},
																"nativeSrc": "2654:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2654:15:1"
															},
															"nativeSrc": "2654:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2654:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2685:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2685:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2688:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2688:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2678:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2678:6:1"
																},
																"nativeSrc": "2678:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2678:15:1"
															},
															"nativeSrc": "2678:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2678:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2519:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "2519:180:1"
											},
											{
												"body": {
													"nativeSrc": "2750:149:1",
													"nodeType": "YulBlock",
													"src": "2750:149:1",
													"statements": [
														{
															"nativeSrc": "2760:25:1",
															"nodeType": "YulAssignment",
															"src": "2760:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2783:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2783:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2765:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "2765:17:1"
																},
																"nativeSrc": "2765:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2765:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2760:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "2760:1:1"
																}
															]
														},
														{
															"nativeSrc": "2794:25:1",
															"nodeType": "YulAssignment",
															"src": "2794:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2817:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2817:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2799:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "2799:17:1"
																},
																"nativeSrc": "2799:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2799:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2794:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "2794:1:1"
																}
															]
														},
														{
															"nativeSrc": "2828:17:1",
															"nodeType": "YulAssignment",
															"src": "2828:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2840:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2840:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2843:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2843:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "2836:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2836:3:1"
																},
																"nativeSrc": "2836:9:1",
																"nodeType": "YulFunctionCall",
																"src": "2836:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "2828:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2828:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2870:22:1",
																"nodeType": "YulBlock",
																"src": "2870:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2872:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "2872:16:1"
																			},
																			"nativeSrc": "2872:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2872:18:1"
																		},
																		"nativeSrc": "2872:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2872:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "2861:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2861:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "2867:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2867:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2858:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2858:2:1"
																},
																"nativeSrc": "2858:11:1",
																"nodeType": "YulFunctionCall",
																"src": "2858:11:1"
															},
															"nativeSrc": "2855:37:1",
															"nodeType": "YulIf",
															"src": "2855:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "2705:194:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2736:1:1",
														"nodeType": "YulTypedName",
														"src": "2736:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2739:1:1",
														"nodeType": "YulTypedName",
														"src": "2739:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "2745:4:1",
														"nodeType": "YulTypedName",
														"src": "2745:4:1",
														"type": ""
													}
												],
												"src": "2705:194:1"
											},
											{
												"body": {
													"nativeSrc": "3018:34:1",
													"nodeType": "YulBlock",
													"src": "3018:34:1",
													"statements": [
														{
															"nativeSrc": "3028:18:1",
															"nodeType": "YulAssignment",
															"src": "3028:18:1",
															"value": {
																"name": "pos",
																"nativeSrc": "3043:3:1",
																"nodeType": "YulIdentifier",
																"src": "3043:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3028:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "3028:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "2905:147:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2990:3:1",
														"nodeType": "YulTypedName",
														"src": "2990:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2995:6:1",
														"nodeType": "YulTypedName",
														"src": "2995:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3006:11:1",
														"nodeType": "YulTypedName",
														"src": "3006:11:1",
														"type": ""
													}
												],
												"src": "2905:147:1"
											},
											{
												"body": {
													"nativeSrc": "3164:8:1",
													"nodeType": "YulBlock",
													"src": "3164:8:1",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "3058:114:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3156:6:1",
														"nodeType": "YulTypedName",
														"src": "3156:6:1",
														"type": ""
													}
												],
												"src": "3058:114:1"
											},
											{
												"body": {
													"nativeSrc": "3341:235:1",
													"nodeType": "YulBlock",
													"src": "3341:235:1",
													"statements": [
														{
															"nativeSrc": "3351:90:1",
															"nodeType": "YulAssignment",
															"src": "3351:90:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3434:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3434:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3439:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3439:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "3358:75:1",
																	"nodeType": "YulIdentifier",
																	"src": "3358:75:1"
																},
																"nativeSrc": "3358:83:1",
																"nodeType": "YulFunctionCall",
																"src": "3358:83:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3351:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3351:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3539:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3539:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "3450:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "3450:88:1"
																},
																"nativeSrc": "3450:93:1",
																"nodeType": "YulFunctionCall",
																"src": "3450:93:1"
															},
															"nativeSrc": "3450:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "3450:93:1"
														},
														{
															"nativeSrc": "3552:18:1",
															"nodeType": "YulAssignment",
															"src": "3552:18:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3563:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3563:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3568:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3568:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3559:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3559:3:1"
																},
																"nativeSrc": "3559:11:1",
																"nodeType": "YulFunctionCall",
																"src": "3559:11:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3552:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3552:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "3178:398:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3329:3:1",
														"nodeType": "YulTypedName",
														"src": "3329:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3337:3:1",
														"nodeType": "YulTypedName",
														"src": "3337:3:1",
														"type": ""
													}
												],
												"src": "3178:398:1"
											},
											{
												"body": {
													"nativeSrc": "3770:191:1",
													"nodeType": "YulBlock",
													"src": "3770:191:1",
													"statements": [
														{
															"nativeSrc": "3781:154:1",
															"nodeType": "YulAssignment",
															"src": "3781:154:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3931:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3931:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "3788:141:1",
																	"nodeType": "YulIdentifier",
																	"src": "3788:141:1"
																},
																"nativeSrc": "3788:147:1",
																"nodeType": "YulFunctionCall",
																"src": "3788:147:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3781:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3781:3:1"
																}
															]
														},
														{
															"nativeSrc": "3945:10:1",
															"nodeType": "YulAssignment",
															"src": "3945:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "3952:3:1",
																"nodeType": "YulIdentifier",
																"src": "3952:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3945:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "3582:379:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3757:3:1",
														"nodeType": "YulTypedName",
														"src": "3757:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3766:3:1",
														"nodeType": "YulTypedName",
														"src": "3766:3:1",
														"type": ""
													}
												],
												"src": "3582:379:1"
											},
											{
												"body": {
													"nativeSrc": "4073:58:1",
													"nodeType": "YulBlock",
													"src": "4073:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4095:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4095:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4103:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4103:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4091:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4091:3:1"
																		},
																		"nativeSrc": "4091:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:14:1"
																	},
																	{
																		"hexValue": "4661696c656420746f2073656e64",
																		"kind": "string",
																		"nativeSrc": "4107:16:1",
																		"nodeType": "YulLiteral",
																		"src": "4107:16:1",
																		"type": "",
																		"value": "Failed to send"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4084:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4084:6:1"
																},
																"nativeSrc": "4084:40:1",
																"nodeType": "YulFunctionCall",
																"src": "4084:40:1"
															},
															"nativeSrc": "4084:40:1",
															"nodeType": "YulExpressionStatement",
															"src": "4084:40:1"
														}
													]
												},
												"name": "store_literal_in_memory_e355fd8fe19d0fc36a25d0f63f734a365fe521f7932cec67eca735765d8ca408",
												"nativeSrc": "3967:164:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4065:6:1",
														"nodeType": "YulTypedName",
														"src": "4065:6:1",
														"type": ""
													}
												],
												"src": "3967:164:1"
											},
											{
												"body": {
													"nativeSrc": "4283:220:1",
													"nodeType": "YulBlock",
													"src": "4283:220:1",
													"statements": [
														{
															"nativeSrc": "4293:74:1",
															"nodeType": "YulAssignment",
															"src": "4293:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4359:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4359:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4364:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4364:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4300:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "4300:58:1"
																},
																"nativeSrc": "4300:67:1",
																"nodeType": "YulFunctionCall",
																"src": "4300:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4293:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4293:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4465:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4465:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e355fd8fe19d0fc36a25d0f63f734a365fe521f7932cec67eca735765d8ca408",
																	"nativeSrc": "4376:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "4376:88:1"
																},
																"nativeSrc": "4376:93:1",
																"nodeType": "YulFunctionCall",
																"src": "4376:93:1"
															},
															"nativeSrc": "4376:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "4376:93:1"
														},
														{
															"nativeSrc": "4478:19:1",
															"nodeType": "YulAssignment",
															"src": "4478:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4489:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4489:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4494:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4494:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4485:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4485:3:1"
																},
																"nativeSrc": "4485:12:1",
																"nodeType": "YulFunctionCall",
																"src": "4485:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4478:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4478:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e355fd8fe19d0fc36a25d0f63f734a365fe521f7932cec67eca735765d8ca408_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4137:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4271:3:1",
														"nodeType": "YulTypedName",
														"src": "4271:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4279:3:1",
														"nodeType": "YulTypedName",
														"src": "4279:3:1",
														"type": ""
													}
												],
												"src": "4137:366:1"
											},
											{
												"body": {
													"nativeSrc": "4680:248:1",
													"nodeType": "YulBlock",
													"src": "4680:248:1",
													"statements": [
														{
															"nativeSrc": "4690:26:1",
															"nodeType": "YulAssignment",
															"src": "4690:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4702:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4702:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4713:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4713:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4698:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4698:3:1"
																},
																"nativeSrc": "4698:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4698:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4690:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4690:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4737:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4737:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4748:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4748:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4733:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4733:3:1"
																		},
																		"nativeSrc": "4733:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4733:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4756:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "4756:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4762:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4762:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4752:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4752:3:1"
																		},
																		"nativeSrc": "4752:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4752:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4726:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4726:6:1"
																},
																"nativeSrc": "4726:47:1",
																"nodeType": "YulFunctionCall",
																"src": "4726:47:1"
															},
															"nativeSrc": "4726:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "4726:47:1"
														},
														{
															"nativeSrc": "4782:139:1",
															"nodeType": "YulAssignment",
															"src": "4782:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4916:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4916:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e355fd8fe19d0fc36a25d0f63f734a365fe521f7932cec67eca735765d8ca408_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4790:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "4790:124:1"
																},
																"nativeSrc": "4790:131:1",
																"nodeType": "YulFunctionCall",
																"src": "4790:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4782:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4782:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e355fd8fe19d0fc36a25d0f63f734a365fe521f7932cec67eca735765d8ca408__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4509:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4660:9:1",
														"nodeType": "YulTypedName",
														"src": "4660:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4675:4:1",
														"nodeType": "YulTypedName",
														"src": "4675:4:1",
														"type": ""
													}
												],
												"src": "4509:419:1"
											},
											{
												"body": {
													"nativeSrc": "4978:147:1",
													"nodeType": "YulBlock",
													"src": "4978:147:1",
													"statements": [
														{
															"nativeSrc": "4988:25:1",
															"nodeType": "YulAssignment",
															"src": "4988:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5011:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5011:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4993:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "4993:17:1"
																},
																"nativeSrc": "4993:20:1",
																"nodeType": "YulFunctionCall",
																"src": "4993:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4988:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "4988:1:1"
																}
															]
														},
														{
															"nativeSrc": "5022:25:1",
															"nodeType": "YulAssignment",
															"src": "5022:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5045:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5045:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5027:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "5027:17:1"
																},
																"nativeSrc": "5027:20:1",
																"nodeType": "YulFunctionCall",
																"src": "5027:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5022:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "5022:1:1"
																}
															]
														},
														{
															"nativeSrc": "5056:16:1",
															"nodeType": "YulAssignment",
															"src": "5056:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5067:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5067:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5070:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5070:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5063:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5063:3:1"
																},
																"nativeSrc": "5063:9:1",
																"nodeType": "YulFunctionCall",
																"src": "5063:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5056:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5056:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5096:22:1",
																"nodeType": "YulBlock",
																"src": "5096:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5098:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5098:16:1"
																			},
																			"nativeSrc": "5098:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5098:18:1"
																		},
																		"nativeSrc": "5098:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5098:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5088:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5088:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5091:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5091:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5085:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5085:2:1"
																},
																"nativeSrc": "5085:10:1",
																"nodeType": "YulFunctionCall",
																"src": "5085:10:1"
															},
															"nativeSrc": "5082:36:1",
															"nodeType": "YulIf",
															"src": "5082:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4934:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4965:1:1",
														"nodeType": "YulTypedName",
														"src": "4965:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4968:1:1",
														"nodeType": "YulTypedName",
														"src": "4968:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4974:3:1",
														"nodeType": "YulTypedName",
														"src": "4974:3:1",
														"type": ""
													}
												],
												"src": "4934:191:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_e355fd8fe19d0fc36a25d0f63f734a365fe521f7932cec67eca735765d8ca408(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to send\")\n\n    }\n\n    function abi_encode_t_stringliteral_e355fd8fe19d0fc36a25d0f63f734a365fe521f7932cec67eca735765d8ca408_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_e355fd8fe19d0fc36a25d0f63f734a365fe521f7932cec67eca735765d8ca408(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e355fd8fe19d0fc36a25d0f63f734a365fe521f7932cec67eca735765d8ca408__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e355fd8fe19d0fc36a25d0f63f734a365fe521f7932cec67eca735765d8ca408_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610033575f3560e01c806312065fe0146100375780632e1a7d4d14610061578063d0e30db014610089575b5f80fd5b348015610042575f80fd5b5061004b610093565b60405161005891906103e1565b60405180910390f35b34801561006c575f80fd5b5061008760048036038101906100829190610428565b6100d6565b005b610091610253565b005b5f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905090565b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610155576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014c906104ad565b60405180910390fd5b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546101a091906104f8565b925050819055505f3373ffffffffffffffffffffffffffffffffffffffff16826040516101cc90610558565b5f6040518083038185875af1925050503d805f8114610206576040519150601f19603f3d011682016040523d82523d5f602084013e61020b565b606091505b505090508061024f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610246906105b6565b60405180910390fd5b5050565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161580156102b157506102ad6103b8565b3410155b15610310576102be6103c1565b5f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461030891906105d4565b925050819055505b6001805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550345f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546103af91906105d4565b92505081905550565b5f6103e8905090565b5f6096905090565b5f819050919050565b6103db816103c9565b82525050565b5f6020820190506103f45f8301846103d2565b92915050565b5f80fd5b610407816103c9565b8114610411575f80fd5b50565b5f81359050610422816103fe565b92915050565b5f6020828403121561043d5761043c6103fa565b5b5f61044a84828501610414565b91505092915050565b5f82825260208201905092915050565b7f496e76616c696420616d6f756e740000000000000000000000000000000000005f82015250565b5f610497600e83610453565b91506104a282610463565b602082019050919050565b5f6020820190508181035f8301526104c48161048b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610502826103c9565b915061050d836103c9565b9250828203905081811115610525576105246104cb565b5b92915050565b5f81905092915050565b50565b5f6105435f8361052b565b915061054e82610535565b5f82019050919050565b5f61056282610538565b9150819050919050565b7f4661696c656420746f2073656e640000000000000000000000000000000000005f82015250565b5f6105a0600e83610453565b91506105ab8261056c565b602082019050919050565b5f6020820190508181035f8301526105cd81610594565b9050919050565b5f6105de826103c9565b91506105e9836103c9565b9250828201905080821115610601576106006104cb565b5b9291505056fea26469706673582212202a2557a8e43e30bd8e0b6b267d237c664d4b1a7f00a90ee29ccaeca40733ba5864736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x33 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x37 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x89 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B PUSH2 0x93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x428 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x91 PUSH2 0x253 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x155 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C SWAP1 PUSH2 0x4AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x4F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP1 PUSH2 0x558 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x206 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x20B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x24F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x246 SWAP1 PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x2B1 JUMPI POP PUSH2 0x2AD PUSH2 0x3B8 JUMP JUMPDEST CALLVALUE LT ISZERO JUMPDEST ISZERO PUSH2 0x310 JUMPI PUSH2 0x2BE PUSH2 0x3C1 JUMP JUMPDEST PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x5D4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x5D4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3E8 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x96 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DB DUP2 PUSH2 0x3C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3F4 PUSH0 DUP4 ADD DUP5 PUSH2 0x3D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x407 DUP2 PUSH2 0x3C9 JUMP JUMPDEST DUP2 EQ PUSH2 0x411 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x422 DUP2 PUSH2 0x3FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43D JUMPI PUSH2 0x43C PUSH2 0x3FA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x44A DUP5 DUP3 DUP6 ADD PUSH2 0x414 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x497 PUSH1 0xE DUP4 PUSH2 0x453 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A2 DUP3 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4C4 DUP2 PUSH2 0x48B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x502 DUP3 PUSH2 0x3C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x50D DUP4 PUSH2 0x3C9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x525 JUMPI PUSH2 0x524 PUSH2 0x4CB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x543 PUSH0 DUP4 PUSH2 0x52B JUMP JUMPDEST SWAP2 POP PUSH2 0x54E DUP3 PUSH2 0x535 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x562 DUP3 PUSH2 0x538 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E64000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5A0 PUSH1 0xE DUP4 PUSH2 0x453 JUMP JUMPDEST SWAP2 POP PUSH2 0x5AB DUP3 PUSH2 0x56C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5CD DUP2 PUSH2 0x594 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5DE DUP3 PUSH2 0x3C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x5E9 DUP4 PUSH2 0x3C9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x601 JUMPI PUSH2 0x600 PUSH2 0x4CB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0x25 JUMPI 0xA8 0xE4 RETURNDATACOPY ADDRESS 0xBD DUP15 SIGNEXTEND PUSH12 0x267D237C664D4B1A7F00A90E 0xE2 SWAP13 0xCA 0xEC LOG4 SMOD CALLER 0xBA PC PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "2010:507:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1772:96;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1375:265;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;988:262;;;:::i;:::-;;1772:96;1815:7;1841:8;:20;1850:10;1841:20;;;;;;;;;;;;;;;;1834:27;;1772:96;:::o;1375:265::-;1458:6;1434:8;:20;1443:10;1434:20;;;;;;;;;;;;;;;;:30;;1426:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;1517:6;1493:8;:20;1502:10;1493:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;1534:9;1557:10;1549:24;;1581:6;1549:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1533:59;;;1610:4;1602:31;;;;;;;;;;;;:::i;:::-;;;;;;;;;1416:224;1375:265;:::o;988:262::-;1037:9;:21;1047:10;1037:21;;;;;;;;;;;;;;;;;;;;;;;;;1036:22;:60;;;;;1075:21;:19;:21::i;:::-;1062:9;:34;;1036:60;1032:131;;;1136:16;:14;:16::i;:::-;1112:8;:20;1121:10;1112:20;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;1032:131;1196:4;1172:9;:21;1182:10;1172:21;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;1234:9;1210:8;:20;1219:10;1210:20;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;988:262::o;2411:104::-;2474:7;2500:8;2493:15;;2411:104;:::o;2164:98::-;2222:7;2248;2241:14;;2164:98;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:169::-;1461:11;1495:6;1490:3;1483:19;1535:4;1530:3;1526:14;1511:29;;1377:169;;;;:::o;1552:164::-;1692:16;1688:1;1680:6;1676:14;1669:40;1552:164;:::o;1722:366::-;1864:3;1885:67;1949:2;1944:3;1885:67;:::i;:::-;1878:74;;1961:93;2050:3;1961:93;:::i;:::-;2079:2;2074:3;2070:12;2063:19;;1722:366;;;:::o;2094:419::-;2260:4;2298:2;2287:9;2283:18;2275:26;;2347:9;2341:4;2337:20;2333:1;2322:9;2318:17;2311:47;2375:131;2501:4;2375:131;:::i;:::-;2367:139;;2094:419;;;:::o;2519:180::-;2567:77;2564:1;2557:88;2664:4;2661:1;2654:15;2688:4;2685:1;2678:15;2705:194;2745:4;2765:20;2783:1;2765:20;:::i;:::-;2760:25;;2799:20;2817:1;2799:20;:::i;:::-;2794:25;;2843:1;2840;2836:9;2828:17;;2867:1;2861:4;2858:11;2855:37;;;2872:18;;:::i;:::-;2855:37;2705:194;;;;:::o;2905:147::-;3006:11;3043:3;3028:18;;2905:147;;;;:::o;3058:114::-;;:::o;3178:398::-;3337:3;3358:83;3439:1;3434:3;3358:83;:::i;:::-;3351:90;;3450:93;3539:3;3450:93;:::i;:::-;3568:1;3563:3;3559:11;3552:18;;3178:398;;;:::o;3582:379::-;3766:3;3788:147;3931:3;3788:147;:::i;:::-;3781:154;;3952:3;3945:10;;3582:379;;;:::o;3967:164::-;4107:16;4103:1;4095:6;4091:14;4084:40;3967:164;:::o;4137:366::-;4279:3;4300:67;4364:2;4359:3;4300:67;:::i;:::-;4293:74;;4376:93;4465:3;4376:93;:::i;:::-;4494:2;4489:3;4485:12;4478:19;;4137:366;;;:::o;4509:419::-;4675:4;4713:2;4702:9;4698:18;4690:26;;4762:9;4756:4;4752:20;4748:1;4737:9;4733:17;4726:47;4790:131;4916:4;4790:131;:::i;:::-;4782:139;;4509:419;;;:::o;4934:191::-;4974:3;4993:20;5011:1;4993:20;:::i;:::-;4988:25;;5027:20;5045:1;5027:20;:::i;:::-;5022:25;;5070:1;5067;5063:9;5056:16;;5091:3;5088:1;5085:10;5082:36;;;5098:18;;:::i;:::-;5082:36;4934:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "319400",
								"executionCost": "353",
								"totalCost": "319753"
							},
							"external": {
								"deposit()": "infinite",
								"getBalance()": "2497",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"getBonusAmount()": "22",
								"getBonusRequirement()": "22"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2010,
									"end": 2517,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2010,
									"end": 2517,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2010,
									"end": 2517,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2010,
									"end": 2517,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2010,
									"end": 2517,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2010,
									"end": 2517,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2010,
									"end": 2517,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2010,
									"end": 2517,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2010,
									"end": 2517,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2010,
									"end": 2517,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2010,
									"end": 2517,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2010,
									"end": 2517,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2010,
									"end": 2517,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2010,
									"end": 2517,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2010,
									"end": 2517,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2010,
									"end": 2517,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2010,
									"end": 2517,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2010,
									"end": 2517,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2010,
									"end": 2517,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2010,
									"end": 2517,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2010,
									"end": 2517,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202a2557a8e43e30bd8e0b6b267d237c664d4b1a7f00a90ee29ccaeca40733ba5864736f6c634300081a0033",
									".code": [
										{
											"begin": 2010,
											"end": 2517,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "PUSH",
											"source": 0,
											"value": "12065FE0"
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "PUSH",
											"source": 0,
											"value": "D0E30DB0"
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2517,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1772,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1772,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1375,
											"end": 1640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1375,
											"end": 1640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 988,
											"end": 1250,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 988,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 988,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 988,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 988,
											"end": 1250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 988,
											"end": 1250,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 988,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 988,
											"end": 1250,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1815,
											"end": 1822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1841,
											"end": 1849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1860,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1861,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1841,
											"end": 1861,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1861,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1841,
											"end": 1861,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1861,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1861,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1841,
											"end": 1861,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1861,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1861,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1841,
											"end": 1861,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1841,
											"end": 1861,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1861,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1834,
											"end": 1861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1834,
											"end": 1861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1442,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1453,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1464,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1464,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1426,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1426,
											"end": 1483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1426,
											"end": 1483,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1426,
											"end": 1483,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1426,
											"end": 1483,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1426,
											"end": 1483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1426,
											"end": 1483,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1426,
											"end": 1483,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1426,
											"end": 1483,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1426,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1426,
											"end": 1483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1426,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1426,
											"end": 1483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1426,
											"end": 1483,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1426,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1426,
											"end": 1483,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1426,
											"end": 1483,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1426,
											"end": 1483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1426,
											"end": 1483,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1426,
											"end": 1483,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1426,
											"end": 1483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1426,
											"end": 1483,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1426,
											"end": 1483,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1426,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1493,
											"end": 1513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1512,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1493,
											"end": 1513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1493,
											"end": 1513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1513,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1493,
											"end": 1513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1513,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1493,
											"end": 1513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1493,
											"end": 1513,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1493,
											"end": 1523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1523,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1493,
											"end": 1523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1493,
											"end": 1523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1523,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1493,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1523,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1523,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1534,
											"end": 1543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1557,
											"end": 1567,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1573,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1549,
											"end": 1573,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 1587,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1549,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1602,
											"end": 1633,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1633,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1602,
											"end": 1633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1633,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1602,
											"end": 1633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1602,
											"end": 1633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1602,
											"end": 1633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1633,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1602,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1633,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1633,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1633,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1602,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1416,
											"end": 1640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 988,
											"end": 1250,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 988,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1057,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1096,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1036,
											"end": 1096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1075,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1075,
											"end": 1096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1096,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1075,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1062,
											"end": 1071,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1062,
											"end": 1096,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1062,
											"end": 1096,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1096,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1036,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1163,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1032,
											"end": 1163,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1136,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1136,
											"end": 1152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1152,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1136,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1131,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1132,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1112,
											"end": 1132,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1132,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1112,
											"end": 1132,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1132,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1132,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1132,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1112,
											"end": 1132,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1132,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1132,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1132,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1112,
											"end": 1132,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1132,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1152,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1112,
											"end": 1152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1112,
											"end": 1152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1152,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1112,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1152,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1152,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1152,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1152,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1152,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1163,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1032,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1200,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1172,
											"end": 1181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1182,
											"end": 1192,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1193,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1172,
											"end": 1193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1193,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1172,
											"end": 1193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1193,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1193,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1193,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1243,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1229,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1210,
											"end": 1230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1210,
											"end": 1230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1230,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1243,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1243,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1243,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1210,
											"end": 1243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1243,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1210,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1243,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1243,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 988,
											"end": 1250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2515,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2411,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2474,
											"end": 2481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2508,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 2493,
											"end": 2508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2164,
											"end": 2262,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2164,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2222,
											"end": 2229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2241,
											"end": 2255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2241,
											"end": 2255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2164,
											"end": 2262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2164,
											"end": 2262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 769,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 997,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1156,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1301,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1546,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1377,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1501,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1490,
											"end": 1493,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1539,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1530,
											"end": 1533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1540,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1546,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1546,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1716,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1552,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1708,
											"name": "PUSH",
											"source": 1,
											"value": "496E76616C696420616D6F756E74000000000000000000000000000000000000"
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1690,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1709,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 2088,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1722,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 1867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1949,
											"end": 1951,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 1944,
											"end": 1947,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1885,
											"end": 1952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1878,
											"end": 1952,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1878,
											"end": 1952,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1961,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2050,
											"end": 2053,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1961,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1961,
											"end": 2054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1961,
											"end": 2054,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1961,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2081,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2077,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2063,
											"end": 2082,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 2088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 2088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 2088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 2088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2094,
											"end": 2513,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2094,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2264,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2298,
											"end": 2300,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2296,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2356,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2341,
											"end": 2345,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2334,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2331,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 2358,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2501,
											"end": 2505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2375,
											"end": 2506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2506,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2375,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2094,
											"end": 2513,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2094,
											"end": 2513,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2094,
											"end": 2513,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2094,
											"end": 2513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2519,
											"end": 2699,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2519,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2644,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2564,
											"end": 2565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2645,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2668,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2661,
											"end": 2662,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2654,
											"end": 2669,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2692,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2685,
											"end": 2686,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2678,
											"end": 2693,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2899,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2705,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2745,
											"end": 2749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2765,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2765,
											"end": 2785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2785,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2765,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2760,
											"end": 2785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2760,
											"end": 2785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2817,
											"end": 2818,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2799,
											"end": 2819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2819,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2799,
											"end": 2819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2819,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2841,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2845,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2828,
											"end": 2845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2828,
											"end": 2845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2861,
											"end": 2865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2869,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2855,
											"end": 2892,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2855,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2855,
											"end": 2892,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2872,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2872,
											"end": 2890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2890,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2872,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2855,
											"end": 2892,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2855,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2899,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2899,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 3052,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2905,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3043,
											"end": 3046,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3046,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 3052,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 3052,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 3052,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 3052,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 3052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3058,
											"end": 3172,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3058,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3058,
											"end": 3172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3058,
											"end": 3172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3576,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3178,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3358,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3439,
											"end": 3440,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3434,
											"end": 3437,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3358,
											"end": 3441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3441,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3358,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3441,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3539,
											"end": 3542,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3450,
											"end": 3543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3543,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3450,
											"end": 3543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3568,
											"end": 3569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3559,
											"end": 3570,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3552,
											"end": 3570,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3552,
											"end": 3570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3576,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3576,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3961,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3582,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3766,
											"end": 3769,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3788,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3931,
											"end": 3934,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3788,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3788,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3788,
											"end": 3935,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3788,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3781,
											"end": 3935,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3781,
											"end": 3935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3955,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3955,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3961,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3961,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3967,
											"end": 4131,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3967,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4107,
											"end": 4123,
											"name": "PUSH",
											"source": 1,
											"value": "4661696C656420746F2073656E64000000000000000000000000000000000000"
										},
										{
											"begin": 4103,
											"end": 4104,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4095,
											"end": 4101,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4105,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4124,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3967,
											"end": 4131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3967,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4503,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4137,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4282,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4300,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4364,
											"end": 4366,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 4359,
											"end": 4362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4300,
											"end": 4367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4367,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4300,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4376,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4465,
											"end": 4468,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4376,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4376,
											"end": 4469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4376,
											"end": 4469,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4376,
											"end": 4469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4494,
											"end": 4496,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4489,
											"end": 4492,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4485,
											"end": 4497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4503,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4928,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4509,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4713,
											"end": 4715,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4702,
											"end": 4711,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4756,
											"end": 4760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4752,
											"end": 4772,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4748,
											"end": 4749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4737,
											"end": 4746,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4733,
											"end": 4750,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4773,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4790,
											"end": 4921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4921,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4790,
											"end": 4921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4782,
											"end": 4921,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4782,
											"end": 4921,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4928,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4934,
											"end": 5125,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4934,
											"end": 5125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 4977,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4993,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5011,
											"end": 5012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4993,
											"end": 5013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5013,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 4993,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4988,
											"end": 5013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4988,
											"end": 5013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5045,
											"end": 5046,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5027,
											"end": 5047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5047,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5027,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5022,
											"end": 5047,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5022,
											"end": 5047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5070,
											"end": 5071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5068,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5063,
											"end": 5072,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5056,
											"end": 5072,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5056,
											"end": 5072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5091,
											"end": 5094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5088,
											"end": 5089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5085,
											"end": 5095,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5082,
											"end": 5118,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5082,
											"end": 5118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5082,
											"end": 5118,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 5098,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 5098,
											"end": 5116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5116,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 5098,
											"end": 5116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5082,
											"end": 5118,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5082,
											"end": 5118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4934,
											"end": 5125,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4934,
											"end": 5125,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4934,
											"end": 5125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4934,
											"end": 5125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4934,
											"end": 5125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"advanced/AbstractContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"deposit()": "d0e30db0",
							"getBalance()": "12065fe0",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract implements the AbstractContract and defines the bonus amount and bonus requirement.\",\"kind\":\"dev\",\"methods\":{\"deposit()\":{\"details\":\"Function to deposit Ether into the contract. If the user has not deposited before and meets the bonus requirement, a bonus is added.\"},\"getBalance()\":{\"details\":\"Function to get the balance of the sender.\",\"returns\":{\"_0\":\"The balance of the sender as a uint256.\"}},\"withdraw(uint256)\":{\"details\":\"Function to withdraw Ether from the contract.\",\"params\":{\"amount\":\"The amount to withdraw.\"}}},\"title\":\"Bank Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"advanced/AbstractContract.sol\":\"Bank\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"advanced/AbstractContract.sol\":{\"keccak256\":\"0x29fcbe0e73a589a430126f6d7433a993061c780b03cccb6e1483d3f27dfd6f5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb4c9530229f1306794add03c4be388b5ee16e9b2fb40e898a24bf71aafcdff8\",\"dweb:/ipfs/QmbyZT3UWhHrwaWatBnhQT7BSqigtTDq3NvenH3xEajTp5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "advanced/AbstractContract.sol:Bank",
								"label": "balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 10,
								"contract": "advanced/AbstractContract.sol:Bank",
								"label": "deposited",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"advanced/AbstractContract.sol": {
				"ast": {
					"absolutePath": "advanced/AbstractContract.sol",
					"exportedSymbols": {
						"AbstractContract": [
							118
						],
						"Bank": [
							142
						]
					},
					"id": 143,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:31:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "AbstractContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "65:160:0",
								"text": " @title AbstractContract\n @dev This abstract contract provides the structure for a sign-up bonus system with deposit and withdrawal functionalities."
							},
							"fullyImplemented": false,
							"id": 118,
							"linearizedBaseContracts": [
								118
							],
							"name": "AbstractContract",
							"nameLocation": "244:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 6,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "295:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 118,
									"src": "267:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 5,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "275:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "267:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 4,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "286:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "deposited",
									"nameLocation": "334:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 118,
									"src": "309:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 9,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 7,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "317:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "309:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 8,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "328:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "350:154:0",
										"text": " @dev Internal function to get the bonus amount. Must be implemented by derived contracts.\n @return The bonus amount as a uint256."
									},
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getBonusAmount",
									"nameLocation": "518:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "532:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "566:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "565:9:0"
									},
									"scope": 118,
									"src": "509:66:0",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "581:164:0",
										"text": " @dev Internal function to get the bonus requirement. Must be implemented by derived contracts.\n @return The bonus requirement as a uint256."
									},
									"id": 22,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getBonusRequirement",
									"nameLocation": "759:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "778:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "812:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "812:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:9:0"
									},
									"scope": 118,
									"src": "750:71:0",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "1022:228:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "1036:22:0",
														"subExpression": {
															"baseExpression": {
																"id": 26,
																"name": "deposited",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1037:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 29,
															"indexExpression": {
																"expression": {
																	"id": 27,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1047:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 28,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1051:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1047:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1037:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 31,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1062:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1066:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1062:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 33,
																"name": "getBonusRequirement",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "1075:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																	"typeString": "function () pure returns (uint256)"
																}
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1075:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1062:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1036:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 46,
												"nodeType": "IfStatement",
												"src": "1032:131:0",
												"trueBody": {
													"id": 45,
													"nodeType": "Block",
													"src": "1098:65:0",
													"statements": [
														{
															"expression": {
																"id": 43,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 37,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 6,
																		"src": "1112:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 40,
																	"indexExpression": {
																		"expression": {
																			"id": 38,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1121:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 39,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1125:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1121:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1112:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 41,
																		"name": "getBonusAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 16,
																		"src": "1136:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																			"typeString": "function () pure returns (uint256)"
																		}
																	},
																	"id": 42,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1136:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1112:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 44,
															"nodeType": "ExpressionStatement",
															"src": "1112:40:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 47,
															"name": "deposited",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "1172:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 50,
														"indexExpression": {
															"expression": {
																"id": 48,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1182:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1186:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1182:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1172:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1196:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1172:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "1172:28:0"
											},
											{
												"expression": {
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 54,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "1210:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 57,
														"indexExpression": {
															"expression": {
																"id": 55,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1219:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1223:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1219:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1210:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 58,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1234:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1238:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1234:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1210:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "1210:33:0"
											}
										]
									},
									"documentation": {
										"id": 23,
										"nodeType": "StructuredDocumentation",
										"src": "827:156:0",
										"text": " @dev Function to deposit Ether into the contract. If the user has not deposited before and meets the bonus requirement, a bonus is added."
									},
									"functionSelector": "d0e30db0",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "997:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1004:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1022:0:0"
									},
									"scope": 118,
									"src": "988:262:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "1416:224:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 70,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "1434:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 73,
																"indexExpression": {
																	"expression": {
																		"id": 71,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1443:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1447:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1443:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1434:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 74,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "1458:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1434:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74",
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1466:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															},
															"value": "Invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															}
														],
														"id": 69,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1426:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1426:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "1426:57:0"
											},
											{
												"expression": {
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 79,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "1493:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 82,
														"indexExpression": {
															"expression": {
																"id": 80,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1502:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1506:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1502:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1493:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 83,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "1517:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1493:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "1493:30:0"
											},
											{
												"assignments": [
													87,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 87,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "1539:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "1534:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 86,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1534:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 98,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1589:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 90,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1557:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 91,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1561:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1557:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 89,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1549:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 88,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1549:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1549:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 93,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1569:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1549:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 94,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "1581:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1549:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1549:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1533:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 100,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "1610:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f2073656e64",
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1616:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e355fd8fe19d0fc36a25d0f63f734a365fe521f7932cec67eca735765d8ca408",
																"typeString": "literal_string \"Failed to send\""
															},
															"value": "Failed to send"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e355fd8fe19d0fc36a25d0f63f734a365fe521f7932cec67eca735765d8ca408",
																"typeString": "literal_string \"Failed to send\""
															}
														],
														"id": 99,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1602:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1602:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "1602:31:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "1256:114:0",
										"text": " @dev Function to withdraw Ether from the contract.\n @param amount The amount to withdraw."
									},
									"functionSelector": "2e1a7d4d",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1384:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1401:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "1393:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1393:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:16:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1416:0:0"
									},
									"scope": 118,
									"src": "1375:265:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "1824:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 111,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "1841:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 114,
													"indexExpression": {
														"expression": {
															"id": 112,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1850:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1854:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1850:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1841:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 110,
												"id": 115,
												"nodeType": "Return",
												"src": "1834:27:0"
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "1646:121:0",
										"text": " @dev Function to get the balance of the sender.\n @return The balance of the sender as a uint256."
									},
									"functionSelector": "12065fe0",
									"id": 117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "1781:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1791:2:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "1815:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1815:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1814:9:0"
									},
									"scope": 118,
									"src": "1772:96:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 143,
							"src": "226:1644:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 120,
										"name": "AbstractContract",
										"nameLocations": [
											"2027:16:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 118,
										"src": "2027:16:0"
									},
									"id": 121,
									"nodeType": "InheritanceSpecifier",
									"src": "2027:16:0"
								}
							],
							"canonicalName": "Bank",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 119,
								"nodeType": "StructuredDocumentation",
								"src": "1872:137:0",
								"text": " @title Bank Contract\n @dev This contract implements the AbstractContract and defines the bonus amount and bonus requirement."
							},
							"fullyImplemented": true,
							"id": 142,
							"linearizedBaseContracts": [
								142,
								118
							],
							"name": "Bank",
							"nameLocation": "2019:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										16
									],
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "2231:31:0",
										"statements": [
											{
												"expression": {
													"hexValue": "313530",
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2248:7:0",
													"subdenomination": "wei",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_150_by_1",
														"typeString": "int_const 150"
													},
													"value": "150"
												},
												"functionReturnParameters": 127,
												"id": 129,
												"nodeType": "Return",
												"src": "2241:14:0"
											}
										]
									},
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "2050:109:0",
										"text": " @dev Returns the bonus amount to be awarded.\n @return The bonus amount as a uint256."
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBonusAmount",
									"nameLocation": "2173:14:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 124,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2204:8:0"
									},
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2187:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "2222:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2222:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2221:9:0"
									},
									"scope": 142,
									"src": "2164:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										22
									],
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "2483:32:0",
										"statements": [
											{
												"expression": {
													"hexValue": "31303030",
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2500:8:0",
													"subdenomination": "wei",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000_by_1",
														"typeString": "int_const 1000"
													},
													"value": "1000"
												},
												"functionReturnParameters": 137,
												"id": 139,
												"nodeType": "Return",
												"src": "2493:15:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "2268:138:0",
										"text": " @dev Returns the minimum deposit required to receive a bonus.\n @return The bonus requirement amount as a uint256."
									},
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBonusRequirement",
									"nameLocation": "2420:19:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 134,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2456:8:0"
									},
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2439:2:0"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2474:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2474:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2473:9:0"
									},
									"scope": 142,
									"src": "2411:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 143,
							"src": "2010:507:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2486:0"
				},
				"id": 0
			}
		}
	}
}