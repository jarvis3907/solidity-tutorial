{
	"id": "231c98041f023ba48a8d49893277c571",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Conditional.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0 <0.9.0;\n\ncontract Contitional {\n    // State variable to control edit permission.\n    // Default value is set to `true`.\n    bool private canEdit = true;\n\n    // State variable to control read permission.\n    // Default value is set to `true`.\n    bool private canRead = true;\n\n    /**\n     * @dev Public view function that returns the current state of `canEdit`.\n     * It indicates whether editing is allowed or not.\n     * As a `view` function, it does not modify the contract's state and is used for reading purposes only.\n     * @return A boolean value representing the edit permission (`true` if editing is allowed, `false` otherwise).\n     */\n    function getEdit() public view returns (bool) {\n        return canEdit;\n    }\n\n    /**\n     * @dev Public view function that returns the current state of `canRead`.\n     * It indicates whether reading is allowed or not.\n     * As a `view` function, it does not modify the contract's state and is used for reading purposes only.\n     * @return A boolean value representing the read permission (`true` if reading is allowed, `false` otherwise).\n     */\n    function getRead() public view returns (bool) {\n        return canRead;\n    }\n\n    /**\n     * @dev Public function to toggle the `canEdit` state.\n     * It switches the `canEdit` boolean value between `true` and `false`.\n     * If `canEdit` is `true`, calling this function will set it to `false` and vice versa.\n     * This function modifies the contract's state.\n     */\n    function changeEditState() public {\n        canEdit = !canEdit; // Toggles canEdit between true and false\n    }\n\n    /**\n     * @dev Public function to toggle the `canRead` state.\n     * It switches the `canRead` boolean value between `true` and `false`.\n     * If `canRead` is `true`, calling this function will set it to `false` and vice versa.\n     * This function modifies the contract's state.\n     */\n    function changeReadState() public {\n        canRead = !canRead; // Toggles canRead between true and false\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/Conditional.sol": {
				"Contitional": {
					"abi": [
						{
							"inputs": [],
							"name": "changeEditState",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "changeReadState",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getEdit",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRead",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"changeEditState()": {
								"details": "Public function to toggle the `canEdit` state. It switches the `canEdit` boolean value between `true` and `false`. If `canEdit` is `true`, calling this function will set it to `false` and vice versa. This function modifies the contract's state."
							},
							"changeReadState()": {
								"details": "Public function to toggle the `canRead` state. It switches the `canRead` boolean value between `true` and `false`. If `canRead` is `true`, calling this function will set it to `false` and vice versa. This function modifies the contract's state."
							},
							"getEdit()": {
								"details": "Public view function that returns the current state of `canEdit`. It indicates whether editing is allowed or not. As a `view` function, it does not modify the contract's state and is used for reading purposes only.",
								"returns": {
									"_0": "A boolean value representing the edit permission (`true` if editing is allowed, `false` otherwise)."
								}
							},
							"getRead()": {
								"details": "Public view function that returns the current state of `canRead`. It indicates whether reading is allowed or not. As a `view` function, it does not modify the contract's state and is used for reading purposes only.",
								"returns": {
									"_0": "A boolean value representing the read permission (`true` if reading is allowed, `false` otherwise)."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Conditional.sol\":65:2066  contract Contitional {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Conditional.sol\":204:208  true */\n  0x01\n    /* \"contracts/Conditional.sol\":181:208  bool private canEdit = true */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Conditional.sol\":327:331  true */\n  0x01\n    /* \"contracts/Conditional.sol\":304:331  bool private canRead = true */\n  0x00\n  exp(0x0100, 0x01)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Conditional.sol\":65:2066  contract Contitional {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Conditional.sol\":65:2066  contract Contitional {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4b5671dc\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6ff2bf06\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xeb3c673e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf829d513\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Conditional.sol\":1542:1653  function changeEditState() public {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/Conditional.sol\":1165:1242  function getRead() public view returns (bool) {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Conditional.sol\":710:787  function getEdit() public view returns (bool) {... */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Conditional.sol\":1953:2064  function changeReadState() public {... */\n    tag_6:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      stop\n        /* \"contracts/Conditional.sol\":1542:1653  function changeEditState() public {... */\n    tag_8:\n        /* \"contracts/Conditional.sol\":1597:1604  canEdit */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Conditional.sol\":1596:1604  !canEdit */\n      iszero\n        /* \"contracts/Conditional.sol\":1586:1593  canEdit */\n      0x00\n      dup1\n        /* \"contracts/Conditional.sol\":1586:1604  canEdit = !canEdit */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Conditional.sol\":1542:1653  function changeEditState() public {... */\n      jump\t// out\n        /* \"contracts/Conditional.sol\":1165:1242  function getRead() public view returns (bool) {... */\n    tag_10:\n        /* \"contracts/Conditional.sol\":1205:1209  bool */\n      0x00\n        /* \"contracts/Conditional.sol\":1228:1235  canRead */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Conditional.sol\":1221:1235  return canRead */\n      swap1\n      pop\n        /* \"contracts/Conditional.sol\":1165:1242  function getRead() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Conditional.sol\":710:787  function getEdit() public view returns (bool) {... */\n    tag_14:\n        /* \"contracts/Conditional.sol\":750:754  bool */\n      0x00\n        /* \"contracts/Conditional.sol\":773:780  canEdit */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Conditional.sol\":766:780  return canEdit */\n      swap1\n      pop\n        /* \"contracts/Conditional.sol\":710:787  function getEdit() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Conditional.sol\":1953:2064  function changeReadState() public {... */\n    tag_17:\n        /* \"contracts/Conditional.sol\":2008:2015  canRead */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Conditional.sol\":2007:2015  !canRead */\n      iszero\n        /* \"contracts/Conditional.sol\":1997:2004  canRead */\n      0x00\n      0x01\n        /* \"contracts/Conditional.sol\":1997:2015  canRead = !canRead */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Conditional.sol\":1953:2064  function changeReadState() public {... */\n      jump\t// out\n        /* \"#utility.yul\":7:97   */\n    tag_22:\n        /* \"#utility.yul\":41:48   */\n      0x00\n        /* \"#utility.yul\":84:89   */\n      dup2\n        /* \"#utility.yul\":77:90   */\n      iszero\n        /* \"#utility.yul\":70:91   */\n      iszero\n        /* \"#utility.yul\":59:91   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:97   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":103:212   */\n    tag_23:\n        /* \"#utility.yul\":184:205   */\n      tag_27\n        /* \"#utility.yul\":199:204   */\n      dup2\n        /* \"#utility.yul\":184:205   */\n      tag_22\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":179:182   */\n      dup3\n        /* \"#utility.yul\":172:206   */\n      mstore\n        /* \"#utility.yul\":103:212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":218:428   */\n    tag_12:\n        /* \"#utility.yul\":305:309   */\n      0x00\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":332:341   */\n      dup3\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"#utility.yul\":320:346   */\n      swap1\n      pop\n        /* \"#utility.yul\":356:421   */\n      tag_29\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":356:421   */\n      tag_23\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":218:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204233ad2b69b660dd176b0af53144747c61e11748bbea0330d1b7eb5d17965db364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260015f806101000a81548160ff02191690831515021790555060015f60016101000a81548160ff0219169083151502179055503480156041575f80fd5b506101818061004f5f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c80634b5671dc1461004e5780636ff2bf0614610058578063eb3c673e14610076578063f829d51314610094575b5f80fd5b61005661009e565b005b6100606100c5565b60405161006d9190610132565b60405180910390f35b61007e6100da565b60405161008b9190610132565b60405180910390f35b61009c6100ee565b005b5f8054906101000a900460ff16155f806101000a81548160ff021916908315150217905550565b5f8060019054906101000a900460ff16905090565b5f805f9054906101000a900460ff16905090565b5f60019054906101000a900460ff16155f60016101000a81548160ff021916908315150217905550565b5f8115159050919050565b61012c81610118565b82525050565b5f6020820190506101455f830184610123565b9291505056fea26469706673582212204233ad2b69b660dd176b0af53144747c61e11748bbea0330d1b7eb5d17965db364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH1 0x41 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x181 DUP1 PUSH2 0x4F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4B5671DC EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x6FF2BF06 EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0xEB3C673E EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF829D513 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0x9E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60 PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0xDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0xEE JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12C DUP2 PUSH2 0x118 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x145 PUSH0 DUP4 ADD DUP5 PUSH2 0x123 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP CALLER 0xAD 0x2B PUSH10 0xB660DD176B0AF5314474 PUSH29 0x61E11748BBEA0330D1B7EB5D17965DB364736F6C634300081A00330000 ",
							"sourceMap": "65:2001:0:-:0;;;204:4;181:27;;;;;;;;;;;;;;;;;;;;327:4;304:27;;;;;;;;;;;;;;;;;;;;65:2001;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@changeEditState_35": {
									"entryPoint": 158,
									"id": 35,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@changeReadState_45": {
									"entryPoint": 238,
									"id": 45,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getEdit_16": {
									"entryPoint": 218,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRead_25": {
									"entryPoint": 197,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:431:1",
										"nodeType": "YulBlock",
										"src": "0:431:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "49:48:1",
													"nodeType": "YulBlock",
													"src": "49:48:1",
													"statements": [
														{
															"nativeSrc": "59:32:1",
															"nodeType": "YulAssignment",
															"src": "59:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "84:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "84:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "77:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "77:6:1"
																		},
																		"nativeSrc": "77:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "77:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "70:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "70:6:1"
																},
																"nativeSrc": "70:21:1",
																"nodeType": "YulFunctionCall",
																"src": "70:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "59:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "59:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "31:5:1",
														"nodeType": "YulTypedName",
														"src": "31:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "41:7:1",
														"nodeType": "YulTypedName",
														"src": "41:7:1",
														"type": ""
													}
												],
												"src": "7:90:1"
											},
											{
												"body": {
													"nativeSrc": "162:50:1",
													"nodeType": "YulBlock",
													"src": "162:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "179:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "179:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "199:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "199:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "184:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "184:14:1"
																		},
																		"nativeSrc": "184:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "184:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "172:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:1"
																},
																"nativeSrc": "172:34:1",
																"nodeType": "YulFunctionCall",
																"src": "172:34:1"
															},
															"nativeSrc": "172:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "172:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "103:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "150:5:1",
														"nodeType": "YulTypedName",
														"src": "150:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "157:3:1",
														"nodeType": "YulTypedName",
														"src": "157:3:1",
														"type": ""
													}
												],
												"src": "103:109:1"
											},
											{
												"body": {
													"nativeSrc": "310:118:1",
													"nodeType": "YulBlock",
													"src": "310:118:1",
													"statements": [
														{
															"nativeSrc": "320:26:1",
															"nodeType": "YulAssignment",
															"src": "320:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "332:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "343:2:1",
																		"nodeType": "YulLiteral",
																		"src": "343:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "328:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:1"
																},
																"nativeSrc": "328:18:1",
																"nodeType": "YulFunctionCall",
																"src": "328:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "320:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "394:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "407:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "418:1:1",
																				"nodeType": "YulLiteral",
																				"src": "418:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "403:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:1"
																		},
																		"nativeSrc": "403:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "403:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "356:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "356:37:1"
																},
																"nativeSrc": "356:65:1",
																"nodeType": "YulFunctionCall",
																"src": "356:65:1"
															},
															"nativeSrc": "356:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "356:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "218:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "282:9:1",
														"nodeType": "YulTypedName",
														"src": "282:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "294:6:1",
														"nodeType": "YulTypedName",
														"src": "294:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "305:4:1",
														"nodeType": "YulTypedName",
														"src": "305:4:1",
														"type": ""
													}
												],
												"src": "218:210:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c80634b5671dc1461004e5780636ff2bf0614610058578063eb3c673e14610076578063f829d51314610094575b5f80fd5b61005661009e565b005b6100606100c5565b60405161006d9190610132565b60405180910390f35b61007e6100da565b60405161008b9190610132565b60405180910390f35b61009c6100ee565b005b5f8054906101000a900460ff16155f806101000a81548160ff021916908315150217905550565b5f8060019054906101000a900460ff16905090565b5f805f9054906101000a900460ff16905090565b5f60019054906101000a900460ff16155f60016101000a81548160ff021916908315150217905550565b5f8115159050919050565b61012c81610118565b82525050565b5f6020820190506101455f830184610123565b9291505056fea26469706673582212204233ad2b69b660dd176b0af53144747c61e11748bbea0330d1b7eb5d17965db364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4B5671DC EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x6FF2BF06 EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0xEB3C673E EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF829D513 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0x9E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60 PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0xDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0xEE JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12C DUP2 PUSH2 0x118 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x145 PUSH0 DUP4 ADD DUP5 PUSH2 0x123 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP CALLER 0xAD 0x2B PUSH10 0xB660DD176B0AF5314474 PUSH29 0x61E11748BBEA0330D1B7EB5D17965DB364736F6C634300081A00330000 ",
							"sourceMap": "65:2001:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1542:111;;;:::i;:::-;;1165:77;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;710;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1953:111;;;:::i;:::-;;1542;1597:7;;;;;;;;;;1596:8;1586:7;;:18;;;;;;;;;;;;;;;;;;1542:111::o;1165:77::-;1205:4;1228:7;;;;;;;;;;;1221:14;;1165:77;:::o;710:::-;750:4;773:7;;;;;;;;;;;766:14;;710:77;:::o;1953:111::-;2008:7;;;;;;;;;;;2007:8;1997:7;;:18;;;;;;;;;;;;;;;;;;1953:111::o;7:90:1:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "77000",
								"executionCost": "48709",
								"totalCost": "125709"
							},
							"external": {
								"changeEditState()": "26522",
								"changeReadState()": "26691",
								"getEdit()": "2495",
								"getRead()": "2524"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 65,
									"end": 2066,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 65,
									"end": 2066,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 65,
									"end": 2066,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 204,
									"end": 208,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 181,
									"end": 208,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 208,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 181,
									"end": 208,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 181,
									"end": 208,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 181,
									"end": 208,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 181,
									"end": 208,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 181,
									"end": 208,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 181,
									"end": 208,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 181,
									"end": 208,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 181,
									"end": 208,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 181,
									"end": 208,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 181,
									"end": 208,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 181,
									"end": 208,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 181,
									"end": 208,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 181,
									"end": 208,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 181,
									"end": 208,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 181,
									"end": 208,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 181,
									"end": 208,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 181,
									"end": 208,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 181,
									"end": 208,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 327,
									"end": 331,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 304,
									"end": 331,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 304,
									"end": 331,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 304,
									"end": 331,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 304,
									"end": 331,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 304,
									"end": 331,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 304,
									"end": 331,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 304,
									"end": 331,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 304,
									"end": 331,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 304,
									"end": 331,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 304,
									"end": 331,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 304,
									"end": 331,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 304,
									"end": 331,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 304,
									"end": 331,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 304,
									"end": 331,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 304,
									"end": 331,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 304,
									"end": 331,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 304,
									"end": 331,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 304,
									"end": 331,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 304,
									"end": 331,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 304,
									"end": 331,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 65,
									"end": 2066,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 65,
									"end": 2066,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 65,
									"end": 2066,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 65,
									"end": 2066,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 65,
									"end": 2066,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 65,
									"end": 2066,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 2066,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 65,
									"end": 2066,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 65,
									"end": 2066,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 65,
									"end": 2066,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 65,
									"end": 2066,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 65,
									"end": 2066,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 2066,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 65,
									"end": 2066,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 2066,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 2066,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 65,
									"end": 2066,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 2066,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204233ad2b69b660dd176b0af53144747c61e11748bbea0330d1b7eb5d17965db364736f6c634300081a0033",
									".code": [
										{
											"begin": 65,
											"end": 2066,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "PUSH",
											"source": 0,
											"value": "4B5671DC"
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "PUSH",
											"source": 0,
											"value": "6FF2BF06"
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "PUSH",
											"source": 0,
											"value": "EB3C673E"
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "PUSH",
											"source": 0,
											"value": "F829D513"
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2066,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1653,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1542,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1542,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1542,
											"end": 1653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1653,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1542,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1653,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1242,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1165,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1165,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1165,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1242,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1165,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1165,
											"end": 1242,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1165,
											"end": 1242,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1165,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1242,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1165,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1165,
											"end": 1242,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1242,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1242,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1242,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 710,
											"end": 787,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 710,
											"end": 787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 710,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 710,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 710,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 710,
											"end": 787,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 710,
											"end": 787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 710,
											"end": 787,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 710,
											"end": 787,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 710,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 710,
											"end": 787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 710,
											"end": 787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 710,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 710,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 710,
											"end": 787,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 710,
											"end": 787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 710,
											"end": 787,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 710,
											"end": 787,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 710,
											"end": 787,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 710,
											"end": 787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 710,
											"end": 787,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 710,
											"end": 787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 710,
											"end": 787,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2064,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1953,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1953,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1953,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2064,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1953,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2064,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1653,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1542,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1597,
											"end": 1604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1604,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1604,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1597,
											"end": 1604,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1604,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1604,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1597,
											"end": 1604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1604,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1586,
											"end": 1604,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1604,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1604,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1586,
											"end": 1604,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1604,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1604,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1604,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1604,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1604,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1242,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1165,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 1235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1235,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1228,
											"end": 1235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1235,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1235,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1228,
											"end": 1235,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1235,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1235,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1228,
											"end": 1235,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 710,
											"end": 787,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 710,
											"end": 787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 750,
											"end": 754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 773,
											"end": 780,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 773,
											"end": 780,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 773,
											"end": 780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 773,
											"end": 780,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 773,
											"end": 780,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 773,
											"end": 780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 773,
											"end": 780,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 773,
											"end": 780,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 766,
											"end": 780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 766,
											"end": 780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 710,
											"end": 787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 710,
											"end": 787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2064,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1953,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2008,
											"end": 2015,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2008,
											"end": 2015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2015,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2015,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2008,
											"end": 2015,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2015,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2015,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2008,
											"end": 2015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2015,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2004,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1997,
											"end": 2004,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1997,
											"end": 2015,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1997,
											"end": 2015,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2015,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2015,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1997,
											"end": 2015,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2015,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2015,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2015,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2015,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2015,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2015,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2015,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 97,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 41,
											"end": 48,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 77,
											"end": 90,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 70,
											"end": 91,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 199,
											"end": 204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 184,
											"end": 205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 179,
											"end": 182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 172,
											"end": 206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 218,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 305,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 403,
											"end": 420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 356,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/Conditional.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"changeEditState()": "4b5671dc",
							"changeReadState()": "f829d513",
							"getEdit()": "eb3c673e",
							"getRead()": "6ff2bf06"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"changeEditState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"changeReadState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEdit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRead\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"changeEditState()\":{\"details\":\"Public function to toggle the `canEdit` state. It switches the `canEdit` boolean value between `true` and `false`. If `canEdit` is `true`, calling this function will set it to `false` and vice versa. This function modifies the contract's state.\"},\"changeReadState()\":{\"details\":\"Public function to toggle the `canRead` state. It switches the `canRead` boolean value between `true` and `false`. If `canRead` is `true`, calling this function will set it to `false` and vice versa. This function modifies the contract's state.\"},\"getEdit()\":{\"details\":\"Public view function that returns the current state of `canEdit`. It indicates whether editing is allowed or not. As a `view` function, it does not modify the contract's state and is used for reading purposes only.\",\"returns\":{\"_0\":\"A boolean value representing the edit permission (`true` if editing is allowed, `false` otherwise).\"}},\"getRead()\":{\"details\":\"Public view function that returns the current state of `canRead`. It indicates whether reading is allowed or not. As a `view` function, it does not modify the contract's state and is used for reading purposes only.\",\"returns\":{\"_0\":\"A boolean value representing the read permission (`true` if reading is allowed, `false` otherwise).\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Conditional.sol\":\"Contitional\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Conditional.sol\":{\"keccak256\":\"0xbcccd1cfc121e6b56b5b44f5a6989d41e3aaff111cb0f1b849c3ecf5d71fd731\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b27881247baa76a5f7344dbbcfe1b71843ee299dc342edd2a5b858119d0c6af\",\"dweb:/ipfs/QmQJiFyweqTDcGXpUGVtAyzPYkNndXQim2qFtb6dRHNsYV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "contracts/Conditional.sol:Contitional",
								"label": "canEdit",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 7,
								"contract": "contracts/Conditional.sol:Contitional",
								"label": "canRead",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Conditional.sol": {
				"ast": {
					"absolutePath": "contracts/Conditional.sol",
					"exportedSymbols": {
						"Contitional": [
							46
						]
					},
					"id": 47,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Contitional",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 46,
							"linearizedBaseContracts": [
								46
							],
							"name": "Contitional",
							"nameLocation": "74:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "canEdit",
									"nameLocation": "194:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 46,
									"src": "181:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "181:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "204:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "canRead",
									"nameLocation": "317:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 46,
									"src": "304:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 5,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "304:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "327:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "756:31:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"name": "canEdit",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4,
													"src": "773:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 12,
												"id": 14,
												"nodeType": "Return",
												"src": "766:14:0"
											}
										]
									},
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "338:367:0",
										"text": " @dev Public view function that returns the current state of `canEdit`.\n It indicates whether editing is allowed or not.\n As a `view` function, it does not modify the contract's state and is used for reading purposes only.\n @return A boolean value representing the edit permission (`true` if editing is allowed, `false` otherwise)."
									},
									"functionSelector": "eb3c673e",
									"id": 16,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEdit",
									"nameLocation": "719:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "726:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "750:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 10,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "750:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "749:6:0"
									},
									"scope": 46,
									"src": "710:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1211:31:0",
										"statements": [
											{
												"expression": {
													"id": 22,
													"name": "canRead",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1228:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 21,
												"id": 23,
												"nodeType": "Return",
												"src": "1221:14:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "793:367:0",
										"text": " @dev Public view function that returns the current state of `canRead`.\n It indicates whether reading is allowed or not.\n As a `view` function, it does not modify the contract's state and is used for reading purposes only.\n @return A boolean value representing the read permission (`true` if reading is allowed, `false` otherwise)."
									},
									"functionSelector": "6ff2bf06",
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRead",
									"nameLocation": "1174:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1181:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1205:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 19,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1205:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:6:0"
									},
									"scope": 46,
									"src": "1165:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "1576:77:0",
										"statements": [
											{
												"expression": {
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 29,
														"name": "canEdit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "1586:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 31,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "1596:8:0",
														"subExpression": {
															"id": 30,
															"name": "canEdit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "1597:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1586:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "1586:18:0"
											}
										]
									},
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1248:289:0",
										"text": " @dev Public function to toggle the `canEdit` state.\n It switches the `canEdit` boolean value between `true` and `false`.\n If `canEdit` is `true`, calling this function will set it to `false` and vice versa.\n This function modifies the contract's state."
									},
									"functionSelector": "4b5671dc",
									"id": 35,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeEditState",
									"nameLocation": "1551:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1566:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1576:0:0"
									},
									"scope": 46,
									"src": "1542:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "1987:77:0",
										"statements": [
											{
												"expression": {
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "canRead",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1997:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "2007:8:0",
														"subExpression": {
															"id": 40,
															"name": "canRead",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "2008:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1997:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1997:18:0"
											}
										]
									},
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1659:289:0",
										"text": " @dev Public function to toggle the `canRead` state.\n It switches the `canRead` boolean value between `true` and `false`.\n If `canRead` is `true`, calling this function will set it to `false` and vice versa.\n This function modifies the contract's state."
									},
									"functionSelector": "f829d513",
									"id": 45,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeReadState",
									"nameLocation": "1962:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:0:0"
									},
									"scope": 46,
									"src": "1953:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 47,
							"src": "65:2001:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2035:0"
				},
				"id": 0
			}
		}
	}
}