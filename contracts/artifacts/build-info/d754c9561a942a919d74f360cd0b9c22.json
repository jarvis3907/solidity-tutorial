{
	"id": "d754c9561a942a919d74f360cd0b9c22",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SelfDestruct.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >= 0.7.0 < 0.9.0;\n\n/**\n * @title SelfDestruct Contract\n * @notice This contract demonstrates the use of selfdestruct in Solidity.\n * @dev The contract allows only the owner to destroy it and transfer any remaining Ether balance to the owner's address.\n */\ncontract SelfDestruct {\n    \n    /**\n     * @notice The address of the contract owner.\n     * @dev This is set at the time of contract deployment.\n     */\n    address owner;\n\n    /**\n     * @notice The constructor sets the deployer as the owner of the contract.\n     * @dev The `msg.sender` is the address that deploys the contract.\n     */\n    constructor() {\n        owner = msg.sender; /* Set the owner to the address that deploys the contract. */\n    }\n\n    /**\n     * @notice A fallback function that allows the contract to receive Ether.\n     * @dev This function is executed on a simple Ether transfer to the contract's address.\n     */\n    receive() external payable { \n        /* The contract can receive Ether. No function body is needed as it is a simple receive function. */\n    }\n\n    /**\n     * @notice Destroys the contract and sends the remaining Ether to the owner's address.\n     * @dev Only the owner can call this function. Once called, the contract is destroyed and its code is removed from the blockchain.\n     * @dev The `selfdestruct` function also sends the remaining Ether to the owner's address.\n     */\n    function destroy() public {\n        require(owner == msg.sender, \"you are not owner\"); /* Ensure the caller is the owner */\n        selfdestruct(payable(owner)); /* Destroy the contract and send the remaining Ether to the owner's address */\n    }\n\n    /**\n     * @notice Returns the address of the contract owner.\n     * @dev This is a simple view function that returns the owner's address.\n     * @return The address of the owner.\n     */\n    function getOwner() public view returns(address) {\n        return owner; /* Return the owner's address */\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/SelfDestruct.sol": {
				"SelfDestruct": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "destroy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "The contract allows only the owner to destroy it and transfer any remaining Ether balance to the owner's address.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "The `msg.sender` is the address that deploys the contract."
							},
							"destroy()": {
								"details": "Only the owner can call this function. Once called, the contract is destroyed and its code is removed from the blockchain.The `selfdestruct` function also sends the remaining Ether to the owner's address."
							},
							"getOwner()": {
								"details": "This is a simple view function that returns the owner's address.",
								"returns": {
									"_0": "The address of the owner."
								}
							}
						},
						"stateVariables": {
							"owner": {
								"details": "This is set at the time of contract deployment."
							}
						},
						"title": "SelfDestruct Contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SelfDestruct.sol\":304:1996  contract SelfDestruct {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SelfDestruct.sol\":649:760  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/SelfDestruct.sol\":681:691  msg.sender */\n  caller\n    /* \"contracts/SelfDestruct.sol\":673:678  owner */\n  0x00\n  dup1\n    /* \"contracts/SelfDestruct.sol\":673:691  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SelfDestruct.sol\":304:1996  contract SelfDestruct {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SelfDestruct.sol\":304:1996  contract SelfDestruct {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x83197ef0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_4\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SelfDestruct.sol\":1439:1685  function destroy() public {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contracts/SelfDestruct.sol\":1883:1994  function getOwner() public view returns(address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SelfDestruct.sol\":1439:1685  function destroy() public {... */\n    tag_9:\n        /* \"contracts/SelfDestruct.sol\":1492:1502  msg.sender */\n      caller\n        /* \"contracts/SelfDestruct.sol\":1483:1502  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SelfDestruct.sol\":1483:1488  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SelfDestruct.sol\":1483:1502  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/SelfDestruct.sol\":1475:1524  require(owner == msg.sender, \"you are not owner\") */\n      tag_16\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_17\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_16:\n        /* \"contracts/SelfDestruct.sol\":1592:1597  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SelfDestruct.sol\":1571:1599  selfdestruct(payable(owner)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"contracts/SelfDestruct.sol\":1883:1994  function getOwner() public view returns(address) {... */\n    tag_12:\n        /* \"contracts/SelfDestruct.sol\":1923:1930  address */\n      0x00\n        /* \"contracts/SelfDestruct.sol\":1949:1954  owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SelfDestruct.sol\":1942:1954  return owner */\n      swap1\n      pop\n        /* \"contracts/SelfDestruct.sol\":1883:1994  function getOwner() public view returns(address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_20:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_21:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_29\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_20\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_22:\n        /* \"#utility.yul\":328:352   */\n      tag_31\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_21\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_14:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_33\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_22\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:762   */\n    tag_23:\n        /* \"#utility.yul\":677:688   */\n      0x00\n        /* \"#utility.yul\":711:717   */\n      dup3\n        /* \"#utility.yul\":706:709   */\n      dup3\n        /* \"#utility.yul\":699:718   */\n      mstore\n        /* \"#utility.yul\":751:755   */\n      0x20\n        /* \"#utility.yul\":746:749   */\n      dup3\n        /* \"#utility.yul\":742:756   */\n      add\n        /* \"#utility.yul\":727:756   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":768:935   */\n    tag_24:\n        /* \"#utility.yul\":908:927   */\n      0x796f7520617265206e6f74206f776e6572000000000000000000000000000000\n        /* \"#utility.yul\":904:905   */\n      0x00\n        /* \"#utility.yul\":896:902   */\n      dup3\n        /* \"#utility.yul\":892:906   */\n      add\n        /* \"#utility.yul\":885:928   */\n      mstore\n        /* \"#utility.yul\":768:935   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":941:1307   */\n    tag_25:\n        /* \"#utility.yul\":1083:1086   */\n      0x00\n        /* \"#utility.yul\":1104:1171   */\n      tag_37\n        /* \"#utility.yul\":1168:1170   */\n      0x11\n        /* \"#utility.yul\":1163:1166   */\n      dup4\n        /* \"#utility.yul\":1104:1171   */\n      tag_23\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":1097:1171   */\n      swap2\n      pop\n        /* \"#utility.yul\":1180:1273   */\n      tag_38\n        /* \"#utility.yul\":1269:1272   */\n      dup3\n        /* \"#utility.yul\":1180:1273   */\n      tag_24\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":1298:1300   */\n      0x20\n        /* \"#utility.yul\":1293:1296   */\n      dup3\n        /* \"#utility.yul\":1289:1301   */\n      add\n        /* \"#utility.yul\":1282:1301   */\n      swap1\n      pop\n        /* \"#utility.yul\":941:1307   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1313:1732   */\n    tag_18:\n        /* \"#utility.yul\":1479:1483   */\n      0x00\n        /* \"#utility.yul\":1517:1519   */\n      0x20\n        /* \"#utility.yul\":1506:1515   */\n      dup3\n        /* \"#utility.yul\":1502:1520   */\n      add\n        /* \"#utility.yul\":1494:1520   */\n      swap1\n      pop\n        /* \"#utility.yul\":1566:1575   */\n      dup2\n        /* \"#utility.yul\":1560:1564   */\n      dup2\n        /* \"#utility.yul\":1556:1576   */\n      sub\n        /* \"#utility.yul\":1552:1553   */\n      0x00\n        /* \"#utility.yul\":1541:1550   */\n      dup4\n        /* \"#utility.yul\":1537:1554   */\n      add\n        /* \"#utility.yul\":1530:1577   */\n      mstore\n        /* \"#utility.yul\":1594:1725   */\n      tag_40\n        /* \"#utility.yul\":1720:1724   */\n      dup2\n        /* \"#utility.yul\":1594:1725   */\n      tag_25\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":1586:1725   */\n      swap1\n      pop\n        /* \"#utility.yul\":1313:1732   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122097e04192e106fe00710439322048811b12dd72f861d778c469a680b88847dff064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_15": {
									"entryPoint": null,
									"id": 15,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506102698061005b5f395ff3fe60806040526004361061002c575f3560e01c806383197ef014610037578063893d20e81461004d57610033565b3661003357005b5f80fd5b348015610042575f80fd5b5061004b610077565b005b348015610058575f80fd5b5061006161013c565b60405161006e91906101a2565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610104576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fb90610215565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61018c82610163565b9050919050565b61019c81610182565b82525050565b5f6020820190506101b55f830184610193565b92915050565b5f82825260208201905092915050565b7f796f7520617265206e6f74206f776e65720000000000000000000000000000005f82015250565b5f6101ff6011836101bb565b915061020a826101cb565b602082019050919050565b5f6020820190508181035f83015261022c816101f3565b905091905056fea264697066735822122097e04192e106fe00710439322048811b12dd72f861d778c469a680b88847dff064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x269 DUP1 PUSH2 0x5B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83197EF0 EQ PUSH2 0x37 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x4D JUMPI PUSH2 0x33 JUMP JUMPDEST CALLDATASIZE PUSH2 0x33 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B PUSH2 0x77 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x61 PUSH2 0x13C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x1A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x104 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB SWAP1 PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18C DUP3 PUSH2 0x163 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19C DUP2 PUSH2 0x182 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B5 PUSH0 DUP4 ADD DUP5 PUSH2 0x193 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x796F7520617265206E6F74206F776E6572000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FF PUSH1 0x11 DUP4 PUSH2 0x1BB JUMP JUMPDEST SWAP2 POP PUSH2 0x20A DUP3 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22C DUP2 PUSH2 0x1F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0xE0 COINBASE SWAP3 0xE1 MOD INVALID STOP PUSH18 0x439322048811B12DD72F861D778C469A680 0xB8 DUP9 SELFBALANCE 0xDF CREATE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "304:1692:0:-:0;;;649:111;;;;;;;;;;681:10;673:5;;:18;;;;;;;;;;;;;;;;;;304:1692;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_20": {
									"entryPoint": null,
									"id": 20,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@destroy_40": {
									"entryPoint": 119,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getOwner_49": {
									"entryPoint": 316,
									"id": 49,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_978897ed65b2e5af5d002526b7872b151fa7174b4e2fd1e87ff9808e2d24c95e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_978897ed65b2e5af5d002526b7872b151fa7174b4e2fd1e87ff9808e2d24c95e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_978897ed65b2e5af5d002526b7872b151fa7174b4e2fd1e87ff9808e2d24c95e": {
									"entryPoint": 459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1735:1",
										"nodeType": "YulBlock",
										"src": "0:1735:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:1",
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nativeSrc": "62:65:1",
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:1",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nativeSrc": "73:54:1",
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nativeSrc": "184:51:1",
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nativeSrc": "194:35:1",
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nativeSrc": "205:24:1",
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:1",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:1",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nativeSrc": "306:53:1",
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nativeSrc": "328:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nativeSrc": "316:37:1",
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nativeSrc": "316:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:1",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:1",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nativeSrc": "463:124:1",
													"nodeType": "YulBlock",
													"src": "463:124:1",
													"statements": [
														{
															"nativeSrc": "473:26:1",
															"nodeType": "YulAssignment",
															"src": "473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:1",
																		"nodeType": "YulLiteral",
																		"src": "496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nativeSrc": "481:18:1",
																"nodeType": "YulFunctionCall",
																"src": "481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:1",
																				"nodeType": "YulLiteral",
																				"src": "577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:1"
																		},
																		"nativeSrc": "562:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:1"
																},
																"nativeSrc": "509:71:1",
																"nodeType": "YulFunctionCall",
																"src": "509:71:1"
															},
															"nativeSrc": "509:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:1",
														"nodeType": "YulTypedName",
														"src": "435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:1",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:1",
														"nodeType": "YulTypedName",
														"src": "458:4:1",
														"type": ""
													}
												],
												"src": "365:222:1"
											},
											{
												"body": {
													"nativeSrc": "689:73:1",
													"nodeType": "YulBlock",
													"src": "689:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "706:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "706:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "711:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "711:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "699:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "699:6:1"
																},
																"nativeSrc": "699:19:1",
																"nodeType": "YulFunctionCall",
																"src": "699:19:1"
															},
															"nativeSrc": "699:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "699:19:1"
														},
														{
															"nativeSrc": "727:29:1",
															"nodeType": "YulAssignment",
															"src": "727:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "746:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "746:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "751:4:1",
																		"nodeType": "YulLiteral",
																		"src": "751:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "742:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "742:3:1"
																},
																"nativeSrc": "742:14:1",
																"nodeType": "YulFunctionCall",
																"src": "742:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "727:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "727:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "593:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "661:3:1",
														"nodeType": "YulTypedName",
														"src": "661:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "666:6:1",
														"nodeType": "YulTypedName",
														"src": "666:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "677:11:1",
														"nodeType": "YulTypedName",
														"src": "677:11:1",
														"type": ""
													}
												],
												"src": "593:169:1"
											},
											{
												"body": {
													"nativeSrc": "874:61:1",
													"nodeType": "YulBlock",
													"src": "874:61:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "896:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "896:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "904:1:1",
																				"nodeType": "YulLiteral",
																				"src": "904:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "892:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "892:3:1"
																		},
																		"nativeSrc": "892:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "892:14:1"
																	},
																	{
																		"hexValue": "796f7520617265206e6f74206f776e6572",
																		"kind": "string",
																		"nativeSrc": "908:19:1",
																		"nodeType": "YulLiteral",
																		"src": "908:19:1",
																		"type": "",
																		"value": "you are not owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "885:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "885:6:1"
																},
																"nativeSrc": "885:43:1",
																"nodeType": "YulFunctionCall",
																"src": "885:43:1"
															},
															"nativeSrc": "885:43:1",
															"nodeType": "YulExpressionStatement",
															"src": "885:43:1"
														}
													]
												},
												"name": "store_literal_in_memory_978897ed65b2e5af5d002526b7872b151fa7174b4e2fd1e87ff9808e2d24c95e",
												"nativeSrc": "768:167:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "866:6:1",
														"nodeType": "YulTypedName",
														"src": "866:6:1",
														"type": ""
													}
												],
												"src": "768:167:1"
											},
											{
												"body": {
													"nativeSrc": "1087:220:1",
													"nodeType": "YulBlock",
													"src": "1087:220:1",
													"statements": [
														{
															"nativeSrc": "1097:74:1",
															"nodeType": "YulAssignment",
															"src": "1097:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1163:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1163:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1168:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1168:2:1",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1104:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "1104:58:1"
																},
																"nativeSrc": "1104:67:1",
																"nodeType": "YulFunctionCall",
																"src": "1104:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1097:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1097:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1269:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1269:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_978897ed65b2e5af5d002526b7872b151fa7174b4e2fd1e87ff9808e2d24c95e",
																	"nativeSrc": "1180:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "1180:88:1"
																},
																"nativeSrc": "1180:93:1",
																"nodeType": "YulFunctionCall",
																"src": "1180:93:1"
															},
															"nativeSrc": "1180:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "1180:93:1"
														},
														{
															"nativeSrc": "1282:19:1",
															"nodeType": "YulAssignment",
															"src": "1282:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1293:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1293:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1298:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1298:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1289:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1289:3:1"
																},
																"nativeSrc": "1289:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1289:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1282:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1282:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_978897ed65b2e5af5d002526b7872b151fa7174b4e2fd1e87ff9808e2d24c95e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "941:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1075:3:1",
														"nodeType": "YulTypedName",
														"src": "1075:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1083:3:1",
														"nodeType": "YulTypedName",
														"src": "1083:3:1",
														"type": ""
													}
												],
												"src": "941:366:1"
											},
											{
												"body": {
													"nativeSrc": "1484:248:1",
													"nodeType": "YulBlock",
													"src": "1484:248:1",
													"statements": [
														{
															"nativeSrc": "1494:26:1",
															"nodeType": "YulAssignment",
															"src": "1494:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1506:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1506:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1517:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1517:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1502:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1502:3:1"
																},
																"nativeSrc": "1502:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1502:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1494:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1494:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1541:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1541:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1552:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1552:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1537:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1537:3:1"
																		},
																		"nativeSrc": "1537:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1537:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1560:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1560:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1566:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1566:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1556:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1556:3:1"
																		},
																		"nativeSrc": "1556:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1556:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1530:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1530:6:1"
																},
																"nativeSrc": "1530:47:1",
																"nodeType": "YulFunctionCall",
																"src": "1530:47:1"
															},
															"nativeSrc": "1530:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "1530:47:1"
														},
														{
															"nativeSrc": "1586:139:1",
															"nodeType": "YulAssignment",
															"src": "1586:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "1720:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1720:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_978897ed65b2e5af5d002526b7872b151fa7174b4e2fd1e87ff9808e2d24c95e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1594:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "1594:124:1"
																},
																"nativeSrc": "1594:131:1",
																"nodeType": "YulFunctionCall",
																"src": "1594:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1586:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1586:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_978897ed65b2e5af5d002526b7872b151fa7174b4e2fd1e87ff9808e2d24c95e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1313:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1464:9:1",
														"nodeType": "YulTypedName",
														"src": "1464:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1479:4:1",
														"nodeType": "YulTypedName",
														"src": "1479:4:1",
														"type": ""
													}
												],
												"src": "1313:419:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_978897ed65b2e5af5d002526b7872b151fa7174b4e2fd1e87ff9808e2d24c95e(memPtr) {\n\n        mstore(add(memPtr, 0), \"you are not owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_978897ed65b2e5af5d002526b7872b151fa7174b4e2fd1e87ff9808e2d24c95e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_978897ed65b2e5af5d002526b7872b151fa7174b4e2fd1e87ff9808e2d24c95e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_978897ed65b2e5af5d002526b7872b151fa7174b4e2fd1e87ff9808e2d24c95e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_978897ed65b2e5af5d002526b7872b151fa7174b4e2fd1e87ff9808e2d24c95e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061002c575f3560e01c806383197ef014610037578063893d20e81461004d57610033565b3661003357005b5f80fd5b348015610042575f80fd5b5061004b610077565b005b348015610058575f80fd5b5061006161013c565b60405161006e91906101a2565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610104576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fb90610215565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61018c82610163565b9050919050565b61019c81610182565b82525050565b5f6020820190506101b55f830184610193565b92915050565b5f82825260208201905092915050565b7f796f7520617265206e6f74206f776e65720000000000000000000000000000005f82015250565b5f6101ff6011836101bb565b915061020a826101cb565b602082019050919050565b5f6020820190508181035f83015261022c816101f3565b905091905056fea264697066735822122097e04192e106fe00710439322048811b12dd72f861d778c469a680b88847dff064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83197EF0 EQ PUSH2 0x37 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x4D JUMPI PUSH2 0x33 JUMP JUMPDEST CALLDATASIZE PUSH2 0x33 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B PUSH2 0x77 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x61 PUSH2 0x13C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x1A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x104 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB SWAP1 PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18C DUP3 PUSH2 0x163 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19C DUP2 PUSH2 0x182 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B5 PUSH0 DUP4 ADD DUP5 PUSH2 0x193 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x796F7520617265206E6F74206F776E6572000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FF PUSH1 0x11 DUP4 PUSH2 0x1BB JUMP JUMPDEST SWAP2 POP PUSH2 0x20A DUP3 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22C DUP2 PUSH2 0x1F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0xE0 COINBASE SWAP3 0xE1 MOD INVALID STOP PUSH18 0x439322048811B12DD72F861D778C469A680 0xB8 DUP9 SELFBALANCE 0xDF CREATE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "304:1692:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1439:246;;;;;;;;;;;;;:::i;:::-;;1883:111;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1439:246;1492:10;1483:19;;:5;;;;;;;;;;:19;;;1475:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1592:5;;;;;;;;;;1571:28;;;1883:111;1923:7;1949:5;;;;;;;;;;;1942:12;;1883:111;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:169::-;677:11;711:6;706:3;699:19;751:4;746:3;742:14;727:29;;593:169;;;;:::o;768:167::-;908:19;904:1;896:6;892:14;885:43;768:167;:::o;941:366::-;1083:3;1104:67;1168:2;1163:3;1104:67;:::i;:::-;1097:74;;1180:93;1269:3;1180:93;:::i;:::-;1298:2;1293:3;1289:12;1282:19;;941:366;;;:::o;1313:419::-;1479:4;1517:2;1506:9;1502:18;1494:26;;1566:9;1560:4;1556:20;1552:1;1541:9;1537:17;1530:47;1594:131;1720:4;1594:131;:::i;:::-;1586:139;;1313:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "123400",
								"executionCost": "24434",
								"totalCost": "147834"
							},
							"external": {
								"destroy()": "32019",
								"getOwner()": "2515"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 304,
									"end": 1996,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 304,
									"end": 1996,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 304,
									"end": 1996,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 649,
									"end": 760,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 649,
									"end": 760,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 760,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 649,
									"end": 760,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 649,
									"end": 760,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 649,
									"end": 760,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 649,
									"end": 760,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 760,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 649,
									"end": 760,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 649,
									"end": 760,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 649,
									"end": 760,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 681,
									"end": 691,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 673,
									"end": 678,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 673,
									"end": 678,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 673,
									"end": 691,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 673,
									"end": 691,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 673,
									"end": 691,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 673,
									"end": 691,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 673,
									"end": 691,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 673,
									"end": 691,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 673,
									"end": 691,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 673,
									"end": 691,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 673,
									"end": 691,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 673,
									"end": 691,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 673,
									"end": 691,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 673,
									"end": 691,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 673,
									"end": 691,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 673,
									"end": 691,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 673,
									"end": 691,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 673,
									"end": 691,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 673,
									"end": 691,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 673,
									"end": 691,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 304,
									"end": 1996,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 304,
									"end": 1996,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 304,
									"end": 1996,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 304,
									"end": 1996,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 304,
									"end": 1996,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 304,
									"end": 1996,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 304,
									"end": 1996,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122097e04192e106fe00710439322048811b12dd72f861d778c469a680b88847dff064736f6c634300081a0033",
									".code": [
										{
											"begin": 304,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "83197EF0"
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 304,
											"end": 1996,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1685,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1439,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1685,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1685,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1439,
											"end": 1685,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1685,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1685,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1439,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1439,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1439,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1685,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1439,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1685,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1883,
											"end": 1994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1883,
											"end": 1994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1685,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1439,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1502,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1483,
											"end": 1502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1483,
											"end": 1488,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1488,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1483,
											"end": 1488,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1488,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1483,
											"end": 1488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1483,
											"end": 1502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1502,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1475,
											"end": 1524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1475,
											"end": 1524,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1524,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1475,
											"end": 1524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1524,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1475,
											"end": 1524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1475,
											"end": 1524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1475,
											"end": 1524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1524,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1475,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1475,
											"end": 1524,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1524,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1524,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1524,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1475,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1592,
											"end": 1597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1597,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1597,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1592,
											"end": 1597,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1597,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1597,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1592,
											"end": 1597,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1571,
											"end": 1599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1599,
											"name": "SELFDESTRUCT",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 1930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1954,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1954,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1949,
											"end": 1954,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1954,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1954,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1949,
											"end": 1954,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1942,
											"end": 1954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1942,
											"end": 1954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 593,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 677,
											"end": 688,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 717,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 706,
											"end": 709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 699,
											"end": 718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 751,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 746,
											"end": 749,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 742,
											"end": 756,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 727,
											"end": 756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 727,
											"end": 756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 768,
											"end": 935,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 768,
											"end": 935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 908,
											"end": 927,
											"name": "PUSH",
											"source": 1,
											"value": "796F7520617265206E6F74206F776E6572000000000000000000000000000000"
										},
										{
											"begin": 904,
											"end": 905,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 902,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 892,
											"end": 906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 885,
											"end": 928,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 768,
											"end": 935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 768,
											"end": 935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1307,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 941,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1086,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1168,
											"end": 1170,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1163,
											"end": 1166,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1104,
											"end": 1171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1171,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1104,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1171,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1269,
											"end": 1272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1180,
											"end": 1273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1273,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1180,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1300,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1293,
											"end": 1296,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1301,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 941,
											"end": 1307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1732,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1313,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1483,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1517,
											"end": 1519,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1506,
											"end": 1515,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1494,
											"end": 1520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1494,
											"end": 1520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1575,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1564,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1576,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1541,
											"end": 1550,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1554,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1577,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1594,
											"end": 1725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1725,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1594,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1732,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1732,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/SelfDestruct.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"destroy()": "83197ef0",
							"getOwner()": "893d20e8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"The contract allows only the owner to destroy it and transfer any remaining Ether balance to the owner's address.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"The `msg.sender` is the address that deploys the contract.\"},\"destroy()\":{\"details\":\"Only the owner can call this function. Once called, the contract is destroyed and its code is removed from the blockchain.The `selfdestruct` function also sends the remaining Ether to the owner's address.\"},\"getOwner()\":{\"details\":\"This is a simple view function that returns the owner's address.\",\"returns\":{\"_0\":\"The address of the owner.\"}}},\"stateVariables\":{\"owner\":{\"details\":\"This is set at the time of contract deployment.\"}},\"title\":\"SelfDestruct Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"The constructor sets the deployer as the owner of the contract.\"},\"destroy()\":{\"notice\":\"Destroys the contract and sends the remaining Ether to the owner's address.\"},\"getOwner()\":{\"notice\":\"Returns the address of the contract owner.\"}},\"notice\":\"This contract demonstrates the use of selfdestruct in Solidity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SelfDestruct.sol\":\"SelfDestruct\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SelfDestruct.sol\":{\"keccak256\":\"0xe775dc56ce92b231a5551414d3793c8a3b51595a84fd10606b6137877105acbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d87847e4be54f7a4b0a38d68537590d634b90e995652d5f6f27866661cb607b\",\"dweb:/ipfs/QmY8YR3RQ9JsbwMm6L8gXG3iPwfckSBoRNrLAuJRbRYZGJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "contracts/SelfDestruct.sol:SelfDestruct",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "The constructor sets the deployer as the owner of the contract."
							},
							"destroy()": {
								"notice": "Destroys the contract and sends the remaining Ether to the owner's address."
							},
							"getOwner()": {
								"notice": "Returns the address of the contract owner."
							}
						},
						"notice": "This contract demonstrates the use of selfdestruct in Solidity.",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5159",
				"formattedMessage": "Warning: \"selfdestruct\" has been deprecated. Note that, starting from the Cancun hard fork, the underlying opcode no longer deletes the code and data associated with an account and only transfers its Ether to the beneficiary, unless executed in the same transaction in which the contract was created (see EIP-6780). Any use in newly deployed contracts is strongly discouraged even if the new behavior is taken into account. Future changes to the EVM might further reduce the functionality of the opcode.\n  --> contracts/SelfDestruct.sol:40:9:\n   |\n40 |         selfdestruct(payable(owner)); /* Destroy the contract and send the remaining Ether to the owner's address */\n   |         ^^^^^^^^^^^^\n\n",
				"message": "\"selfdestruct\" has been deprecated. Note that, starting from the Cancun hard fork, the underlying opcode no longer deletes the code and data associated with an account and only transfers its Ether to the beneficiary, unless executed in the same transaction in which the contract was created (see EIP-6780). Any use in newly deployed contracts is strongly discouraged even if the new behavior is taken into account. Future changes to the EVM might further reduce the functionality of the opcode.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1583,
					"file": "contracts/SelfDestruct.sol",
					"start": 1571
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/SelfDestruct.sol": {
				"ast": {
					"absolutePath": "contracts/SelfDestruct.sol",
					"exportedSymbols": {
						"SelfDestruct": [
							50
						]
					},
					"id": 51,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SelfDestruct",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "67:236:0",
								"text": " @title SelfDestruct Contract\n @notice This contract demonstrates the use of selfdestruct in Solidity.\n @dev The contract allows only the owner to destroy it and transfer any remaining Ether balance to the owner's address."
							},
							"fullyImplemented": true,
							"id": 50,
							"linearizedBaseContracts": [
								50
							],
							"name": "SelfDestruct",
							"nameLocation": "313:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "337:121:0",
										"text": " @notice The address of the contract owner.\n @dev This is set at the time of contract deployment."
									},
									"id": 5,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "471:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 50,
									"src": "463:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "463:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 14,
										"nodeType": "Block",
										"src": "663:97:0",
										"statements": [
											{
												"expression": {
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 9,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "673:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 10,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "681:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "685:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "681:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "673:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 13,
												"nodeType": "ExpressionStatement",
												"src": "673:18:0"
											}
										]
									},
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "483:161:0",
										"text": " @notice The constructor sets the deployer as the owner of the contract.\n @dev The `msg.sender` is the address that deploys the contract."
									},
									"id": 15,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "660:2:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "663:0:0"
									},
									"scope": 50,
									"src": "649:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "979:117:0",
										"statements": []
									},
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "766:181:0",
										"text": " @notice A fallback function that allows the contract to receive Ether.\n @dev This function is executed on a simple Ether transfer to the contract's address."
									},
									"id": 20,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "959:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "979:0:0"
									},
									"scope": 50,
									"src": "952:144:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1465:220:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 25,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1483:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 26,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1492:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 27,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1496:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1492:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1483:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f7520617265206e6f74206f776e6572",
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1504:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_978897ed65b2e5af5d002526b7872b151fa7174b4e2fd1e87ff9808e2d24c95e",
																"typeString": "literal_string \"you are not owner\""
															},
															"value": "you are not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_978897ed65b2e5af5d002526b7872b151fa7174b4e2fd1e87ff9808e2d24c95e",
																"typeString": "literal_string \"you are not owner\""
															}
														],
														"id": 24,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1475:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1475:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "1475:49:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 35,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "1592:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1584:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 33,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1584:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1584:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 32,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "1571:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1571:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "1571:28:0"
											}
										]
									},
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1102:332:0",
										"text": " @notice Destroys the contract and sends the remaining Ether to the owner's address.\n @dev Only the owner can call this function. Once called, the contract is destroyed and its code is removed from the blockchain.\n @dev The `selfdestruct` function also sends the remaining Ether to the owner's address."
									},
									"functionSelector": "83197ef0",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "destroy",
									"nameLocation": "1448:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1455:2:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1465:0:0"
									},
									"scope": 50,
									"src": "1439:246:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "1932:62:0",
										"statements": [
											{
												"expression": {
													"id": 46,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5,
													"src": "1949:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 45,
												"id": 47,
												"nodeType": "Return",
												"src": "1942:12:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1691:187:0",
										"text": " @notice Returns the address of the contract owner.\n @dev This is a simple view function that returns the owner's address.\n @return The address of the owner."
									},
									"functionSelector": "893d20e8",
									"id": 49,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "1892:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1900:2:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1923:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:9:0"
									},
									"scope": 50,
									"src": "1883:111:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 51,
							"src": "304:1692:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1965:0"
				},
				"id": 0
			}
		}
	}
}